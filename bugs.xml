<?xml version="1.0"?>
<Sprs>
<Spr>
<Name>DMAN4LKS2C</Name>
<DateCreated>6/23/2000 </DateCreated>
<State build="2.0D04">Resolved</State>
<TestID>axes91</TestID>
<TestDesc>Path steps beyond a union causes "invalid axis" error; breaks Docbook</TestDesc>
<Subsystem>XPath</Subsystem>
</Spr>
<Spr>
<Name>DMAN4QHMD3</Name>
<DateCreated>10/27/2000</DateCreated>
<State build="2.0.0">Resolved</State>
<TestID></TestID>
<TestDesc>Need way to call setFeature() on DTM</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>DMAN4QHQB6</Name>
<DateCreated>10/27/2000</DateCreated>
<State build="2.0.0">Resolved</State>
<TestID></TestID>
<TestDesc>Applet example needs better instructions</TestDesc>
<Subsystem>Examples</Subsystem>
</Spr>
<Spr>
<Name>DMAN4R5TCU</Name>
<DateCreated>11/16/2000</DateCreated>
<State>Open</State>
<TestID>mdocs09,mdocs12,mdocs13, select67,select68,namespace20,mdocserr04</TestID>
<TestDesc>Need SetSystemID in the harness to make document("") work</TestDesc>
<Subsystem>Other</Subsystem>
</Spr>
<Spr>
<Name>DMAN4TATNH</Name>
<DateCreated>1/24/2001 </DateCreated>
<State>Open</State>
<TestID>attribseterr02</TestID>
<TestDesc>Need to catch circular use of attribute-sets</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>DMAN4TATQP</Name>
<DateCreated>1/24/2001 </DateCreated>
<State>Open</State>
<TestID>attribseterr07</TestID>
<TestDesc>No error raised for use-attribute-sets referring to non-existent set</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>DMAN4TATTY</Name>
<DateCreated>1/24/2001 </DateCreated>
<State>Open</State>
<TestID>conditionalerr01, conditionalerr02, conditionalerr04, conditionalerr05</TestID>
<TestDesc>Must enforce correct structure of xsl:choose</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>DMAN4TATWT</Name>
<DateCreated>1/24/2001 </DateCreated>
<State>Open</State>
<TestID>conditionalerr06, conditionalerr07, conditionalerr08; matcherr05, matcherr07; namespaceerr01; numberformaterr04; sorterr04</TestID>
<TestDesc>Need more checks for incorrect attributes in various XSL instructions</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>DMAN4TATYP</Name>
<DateCreated>1/24/2001 </DateCreated>
<State>Open</State>
<TestID>conditionalerr15</TestID>
<TestDesc>Need to catch use of | as or operator in boolean expression</TestDesc>
<Subsystem>XPath</Subsystem>
</Spr>
<Spr>
<Name>DMAN4TAU39</Name>
<DateCreated>1/24/2001 </DateCreated>
<State>Open</State>
<TestID>conditionalerr16</TestID>
<TestDesc>Need to catch reference to undefined variable in certain expressions</TestDesc>
<Subsystem>XPath</Subsystem>
</Spr>
<Spr>
<Name>DMAN4TAU4Z</Name>
<DateCreated>1/24/2001 </DateCreated>
<State>Open</State>
<TestID>entreferr02, entref04; idkeyerr07; outputerr04</TestID>
<TestDesc>Need better catching of invalid characters in element/attribute/PI names</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>DMAN4TAU7L</Name>
<DateCreated>1/24/2001 </DateCreated>
<State>Open</State>
<TestID>idkeyerr08</TestID>
<TestDesc>Need to enforce match-pattern syntax where used in xsl:key</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>DMAN4TAUA4</Name>
<DateCreated>1/24/2001 </DateCreated>
<State>Open</State>
<TestID>idkeyerr10</TestID>
<TestDesc>Use of undefined key name as first arg to key() should raise error</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>DMAN4TAUBY</Name>
<DateCreated>1/24/2001 </DateCreated>
<State>Open</State>
<TestID>impinclerr02</TestID>
<TestDesc>Must catch use of xsl:apply-imports when current template rule is null</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>DMAN4TAUDP</Name>
<DateCreated>1/24/2001 </DateCreated>
<State>Open</State>
<TestID>impinclerr03</TestID>
<TestDesc>Must raise error when other top-level elements precede xsl:import</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>DMAN4TAUFF</Name>
<DateCreated>1/24/2001 </DateCreated>
<State>Open</State>
<TestID>lreerr01, lreerr02</TestID>
<TestDesc>If a namespace prefix is referenced, it's an error for it to be unmapped</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>DMAN4TAUHU</Name>
<DateCreated>1/24/2001 </DateCreated>
<State>Open</State>
<TestID>lreerr05,lreerr06,mdocserr04</TestID>
<TestDesc>Need an error for top-level elements that have no namespace</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>DMAN4TAUJX</Name>
<DateCreated>1/24/2001 </DateCreated>
<State>Open</State>
<TestID>matcherr01, matcherr08</TestID>
<TestDesc>Must raise error when xsl:template has neither name nor match</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>DMAN4TAULK</Name>
<DateCreated>1/24/2001 </DateCreated>
<State>Open</State>
<TestID>mdocserr01</TestID>
<TestDesc>Should raise "file not found" error from first argument to document(), when detectable</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>DMAN4TAUNL</Name>
<DateCreated>1/24/2001 </DateCreated>
<State>Open</State>
<TestID>mdocserr02</TestID>
<TestDesc>Need to raise error when document() has zero arguments</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>DMAN4TAUPZ</Name>
<DateCreated>1/24/2001 </DateCreated>
<State>Open</State>
<TestID>messageerr03</TestID>
<TestDesc>No message from xsl:message with terminate="yes"</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>DMAN4TAURH</Name>
<DateCreated>1/24/2001 </DateCreated>
<State>Open</State>
<TestID>namedtemplateerr12; variableerr09, variableerr10, variableerr11, variableerr12, variableerr13, variableerr14, variableerr15, variableerr16, variableerr20</TestID>
<TestDesc>Need to catch duplicate-named templates, variables, params</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>DMAN4TAUU5</Name>
<DateCreated>1/24/2001 </DateCreated>
<State>Open</State>
<TestID>numberformaterr06, numberformaterr08, numberformaterr09, numberformaterr10, numberformaterr20, numberformaterr21, numberformaterr22, numberformaterr23, numberformaterr24, numberformaterr25, numberformaterr26, numberformaterr27</TestID>
<TestDesc>Need to report syntax errors with decimal-format pattern</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>DMAN4TAV25</Name>
<DateCreated>1/24/2001 </DateCreated>
<State>Open</State>
<TestID>numberingerr01</TestID>
<TestDesc>Must detect grouping-separator being longer than one character in xsl:number</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>DMAN4TAV3U</Name>
<DateCreated>1/24/2001 </DateCreated>
<State>Open</State>
<TestID>numberingerr02, numberingerr03; sorterr01, sorterr02, sorterr03</TestID>
<TestDesc>Where attribute can only take a keyword from a list, must raise error for other values</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>DMAN4TAV5S</Name>
<DateCreated>1/24/2001 </DateCreated>
<State>Open</State>
<TestID>numberingerr06</TestID>
<TestDesc>Should raise error when xsl:number tries to generate out-of-range Roman numerals</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>DMAN4TAV77</Name>
<DateCreated>1/24/2001 </DateCreated>
<State>Open</State>
<TestID>outputerr03</TestID>
<TestDesc>Need special error check for "xml" names in xsl:processing-instruction</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>DMAN4TAV8P</Name>
<DateCreated>1/24/2001 </DateCreated>
<State>Open</State>
<TestID>outputerr14</TestID>
<TestDesc>Need to raise error when attempting to output out-of-range character (based on the encoding)</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>DMAN4TAVAL</Name>
<DateCreated>1/24/2001 </DateCreated>
<State>Open</State>
<TestID>processorinfoerr02</TestID>
<TestDesc>The system-property function should raise error when argument is not namespaced</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>DMAN4TAVCL</Name>
<DateCreated>1/24/2001 </DateCreated>
<State>Open</State>
<TestID>selecterr10, selecterr11, selecterr12, selecterr13, selecterr14, selecterr15, selecterr16</TestID>
<TestDesc>Need to catch various illegal conversions to node-set in xsl:for-each</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>DMAN4TAVEE</Name>
<DateCreated>1/24/2001 </DateCreated>
<State>Open</State>
<TestID>sorterr08</TestID>
<TestDesc>Should have a message about QName as data-type in xsl:sort</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>DMAN4TAVG5</Name>
<DateCreated>1/24/2001 </DateCreated>
<State>Open</State>
<TestID>sorterr10</TestID>
<TestDesc>In multi-level sort, must raise error if any level is bad</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>DMAN4TAVHR</Name>
<DateCreated>1/24/2001 </DateCreated>
<State>Open</State>
<TestID>variableerr05, variableerr06</TestID>
<TestDesc>Should raise error in xsl:param or xsl:variable if value set two ways</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>DMAN4TAVKC</Name>
<DateCreated>1/24/2001 </DateCreated>
<State>Open</State>
<TestID>variableerr08</TestID>
<TestDesc>Need to report when xsl:param is not first child inside xsl:template</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>PDIK4HUPLA</Name>
<DateCreated>3/28/2000 </DateCreated>
<State>Closed</State>
<TestID>atrs20</TestID>
<TestDesc>We don't match attributes that have xml namespace prefix.</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>PDIK4T9SZR</Name>
<DateCreated>1/23/2001 </DateCreated>
<State>Open</State>
<TestID>impincl12</TestID>
<TestDesc>Import/Include over the net w/i firewall is failing</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>SBOG4SPP2F</Name>
<DateCreated>1/5/2001 1</DateCreated>
<State>Pending</State>
<TestID></TestID>
<TestDesc>disable-output-escaping="no" does not work</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>SBOG4SSQZW</Name>
<DateCreated>1/8/2001 2</DateCreated>
<State build="2.0D06">Resolved</State>
<TestID></TestID>
<TestDesc>Stack Traces to System.err re m_reportInPostExceptionFromThread</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>SCUU4QFSHZ</Name>
<DateCreated>10/25/2000</DateCreated>
<State>Closed</State>
<TestID>transformerapitest.java</TestID>
<TestDesc>TRAX Transformer resetParameters() wipes out xsl:param values</TestDesc>
<Subsystem></Subsystem>
</Spr>
<Spr>
<Name>SCUU4QWTVZ</Name>
<DateCreated>11/9/2000 </DateCreated>
<State build="2.0D02">Resolved</State>
<TestID>org.apache.qetest.trax.transformerapitest r1.2</TestID>
<TestDesc>Transformer.setParameter(String); getParameter returns XString</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>SCUU4R3JGY</Name>
<DateCreated>11/14/2000</DateCreated>
<State build="2.0D02">Resolved</State>
<TestID>transformerapitest.java r1.4</TestID>
<TestDesc>TRAX Transformer.setParameter() will not re-set an existing param</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>SCUU4R3JPH</Name>
<DateCreated>11/14/2000</DateCreated>
<State build="2.0D02">Resolved</State>
<TestID>transformerapitest.java r1.4</TestID>
<TestDesc>TRAX identityTransformer.getOutputProperty("method") throws NullPointerException</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>SCUU4R3JRR</Name>
<DateCreated>11/14/2000</DateCreated>
<State build="2.0.0">Resolved</State>
<TestID>transformerapitest.java r1.4; transformerapioutputformat.xsl r1.2</TestID>
<TestDesc>TRAX transformer.getOutputProperties does not return some xsl:output props</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>SCUU4R3JZ7</Name>
<DateCreated>11/14/2000</DateCreated>
<State build="2.0D02">Resolved</State>
<TestID>transformerapitest.java r1.4</TestID>
<TestDesc>TRAX transformer.getOutputProperty after a transform throws NullPointerException</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>SCUU4R3K6G</Name>
<DateCreated>11/14/2000</DateCreated>
<State build="2.0D02">Resolved</State>
<TestID>transformerapitest.java r1.4</TestID>
<TestDesc>TRAX transformer.getErrorListener() is null by default</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>SCUU4R5JYZ</Name>
<DateCreated>11/16/2000</DateCreated>
<State build="2.0D03">Resolved</State>
<TestID>domsourceapitest.java r1.2</TestID>
<TestDesc>TRAX transformerFactory.newTemplates(blankDOMSource) throws npe</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>SCUU4R5KLL</Name>
<DateCreated>11/16/2000</DateCreated>
<State build="2.0D03">Resolved</State>
<TestID>domsourceapitest.java r1.2</TestID>
<TestDesc>TRAX transformer.transform(blankSource, DOMResult) throws TransformerException</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>SCUU4R5QUY</Name>
<DateCreated>11/16/2000</DateCreated>
<State>Pending</State>
<TestID>testmultitypethreads.java r1.1</TestID>
<TestDesc>TestMultiTypeThreads: various (occasional) exceptions from multithreaded testing</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>SCUU4RJKG4</Name>
<DateCreated>11/29/2000</DateCreated>
<State build="2.0.0">Resolved</State>
<TestID>domresultapitest.java r1.2</TestID>
<TestDesc>TRAX Reusing DOMResult throws TransformerException: DOM006 Hierarchy request error</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>SCUU4RXQYH</Name>
<DateCreated>12/12/2000</DateCreated>
<State build="2.0D03">Resolved</State>
<TestID>transformerapitest.java</TestID>
<TestDesc>TRAX transformer.getOutputProperties() throws npe</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>SCUU4RXR6E</Name>
<DateCreated>12/12/2000</DateCreated>
<State build="2.0D03">Resolved</State>
<TestID>transformerapitest.java</TestID>
<TestDesc>TRAX transformer.getOutputProperty before transforming throws npe</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>SCUU4RXR9M</Name>
<DateCreated>12/12/2000</DateCreated>
<State build="2.0D03">Resolved</State>
<TestID>transformerapitest.java</TestID>
<TestDesc>TRAX transform then setOutputProperty blows away all other outputProperties</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>SCUU4RXSG5</Name>
<DateCreated>12/12/2000</DateCreated>
<State build="2.0D03">Resolved</State>
<TestID>templatesapitest.java</TestID>
<TestDesc>TRAX templates.getOutputFormat(OutputKeys.CDATA_SECTION_ELEMENTS) has extra space char</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>SCUU4RXTSQ</Name>
<DateCreated>12/12/2000</DateCreated>
<State build="2.0D06">Resolved</State>
<TestID>transformerfactoryapitest.java</TestID>
<TestDesc>TRAX identity transform of embedded stylesheet has missing linefeed</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>SCUU4RZT78</Name>
<DateCreated>12/14/2000</DateCreated>
<State build="2.0.0">Resolved</State>
<TestID>examplestest.java</TestID>
<TestDesc>ExamplesTest has different output for similar examples</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>SCUU4S6JZL</Name>
<DateCreated>12/19/2000</DateCreated>
<State build="2.0D06">Resolved</State>
<TestID>streamsourceapitest.java</TestID>
<TestDesc>Intermittent failure of imported template rule using Stream sources</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>SCUU4S6N6Y</Name>
<DateCreated>12/19/2000</DateCreated>
<State build="2.0.0">Resolved</State>
<TestID>domresultapitest.java</TestID>
<TestDesc>Various API tests produce different outputs JDK 1.1.8 vs JDK 1.2.2</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>SCUU4S7UJ3</Name>
<DateCreated>12/20/2000</DateCreated>
<State build="2.0D06">Resolved</State>
<TestID></TestID>
<TestDesc>ConformanceTest -flavor trax.s2s hang: expression02.xsl;extend01.xsl;mdocs03;mdocs06.xsl;mdocs15.xsl</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>SCUU4S8PWT</Name>
<DateCreated>12/21/2000</DateCreated>
<State build="2.0D06">Resolved</State>
<TestID>transformerapitest.java</TestID>
<TestDesc>Parameter set on one transformer affects other transformers</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>SCUU4SPPMV</Name>
<DateCreated>1/5/2001 1</DateCreated>
<State build="2.0D06">Resolved</State>
<TestID></TestID>
<TestDesc>TRAX: SAXResult.setLexicalHandler() does not work</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>SCUU4SPUML</Name>
<DateCreated>1/5/2001 5</DateCreated>
<State>Pending</State>
<TestID>position70.xsl</TestID>
<TestDesc>Crimson: position70 has whitespace differences</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>SCUU4SPUV3</Name>
<DateCreated>1/5/2001 5</DateCreated>
<State>Pending</State>
<TestID>extend01.xsl</TestID>
<TestDesc>JDK 1.1.8 only: extend01.xsl throws TransformerException...transformNode()</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>SCUU4SPUXC</Name>
<DateCreated>1/5/2001 5</DateCreated>
<State>Pending</State>
<TestID>output77.xsl</TestID>
<TestDesc>JDK 1.1.8 only: output77.xsl throws IllegalArgumentException: sun.io.CharToByteBig-Deal</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>SCUU4SUQRE</Name>
<DateCreated>1/10/2001 </DateCreated>
<State>Open</State>
<TestID>systemidtest.java</TestID>
<TestDesc>SystemId: file:tests/api/file.xml not found</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>SCUU4SUQXU</Name>
<DateCreated>1/10/2001 </DateCreated>
<State>Open</State>
<TestID>systemidtest.java</TestID>
<TestDesc>SystemId: transform(..."bad name") does not always have a good exception.toString()</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>SCUU4T5Q3W</Name>
<DateCreated>1/19/2001 </DateCreated>
<State>Pending</State>
<TestID>paramtest.java</TestID>
<TestDesc>compat.jar: setStylesheetParam evaluates expression differently 1.x/2.x</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>SCUU4T5QEC</Name>
<DateCreated>1/19/2001 </DateCreated>
<State>Open</State>
<TestID>paramtest.java</TestID>
<TestDesc>xalanj1compat.jar: resetting of parameters works differently 1.x/2.x</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>SCUU4T5QMH</Name>
<DateCreated>1/19/2001 </DateCreated>
<State>Open</State>
<TestID>problemlistenertest.java</TestID>
<TestDesc>xalanj1compat.jar: setProblemListeners are never used</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>SCUU4T5UQX</Name>
<DateCreated>1/19/2001 </DateCreated>
<State>Pending</State>
<TestID>conformancetest.java</TestID>
<TestDesc>compat.jar: process() after setDiagnosticsOutput throws ClassCastException: java.lang.Long</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>SCUU4T8PSH</Name>
<DateCreated>1/22/2001 </DateCreated>
<State>Open</State>
<TestID>threadtest.java</TestID>
<TestDesc>xalanj1compat.jar: TestThreadsX1 throws SAXExceptions (XSLTEngineImpl.java:479)</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>SCUU4T9L4D</Name>
<DateCreated>1/23/2001 </DateCreated>
<State>Open</State>
<TestID>problemlistenertest.java</TestID>
<TestDesc>xalanj1compat.jar: XSLTProcessorImpl.getProblemListener() throws npe</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
<Spr>
<Name>SCUU4T9V7F</Name>
<DateCreated>1/23/2001 </DateCreated>
<State>Open</State>
<TestID>stylesheetreusetest.java</TestID>
<TestDesc>xalanj1compat.jar: processStylesheet() does not set that stylesheet into processor</TestDesc>
<Subsystem>XSLT</Subsystem>
</Spr>
</Sprs>
