<?xml version="1.0" encoding="utf-8"?>
<!-- ===================================================================

   Build file for Xalan-Java - for use with the Jakarta Ant java build tool
   
Setup instructions: 
   Before running an Ant build, you must:
     - set the JAVA_HOME environment variable to the JDK (1.2.2 or higher to do docs) root directory
  
Build Instructions:   
   To build, run:
   build.bat (win32) or build.sh (unix) - optionally with a target arg as indicated below -     
   in the directory where this file is located. The batch/shell file sets up your classpath
   and calls java org.apache.tools.ant.Main
   
Build targets
    This build file supports the following targets:
    - compile  compiles Xalan-J in ./build/classes.
    - jar      creates ./build/xalan.jar [the default target]
    - docs     generates the human-written documentation in ./build/docs
    - javadocs [or apidocs] generates the API documentation in ./build/docs/apidocs
    - clean    purges the build tree.
    
If you build a target that depends on other targets, those other targets are created in 
the correct order.

Authors:
  Shane Curcuru <shane_curcuru@lotus.com>
  Don Leslie <donald_leslie@lotus.com>
  

Copyright:
  Copyright (c) 1999-2000 The Apache Software Foundation.
  
  - Much of this file stolen from Stefano's xml-xerces build.xml  
  
   $Id$
   
==================================================================== -->

<project name="Xalan" default="jar" basedir=".">

  <!-- =================================================================== -->
  <!-- Defines variables used by the other targets                         -->
  <!-- =================================================================== -->

  <property name="version" value="Alpha_2_0_D0"/>
 <!--To compile sample servlet, update "servletjar" to point to JAR containing javax.servlet and javax.servlet.http packages-->
  <property name="servletjar" value="\jswdk-1.0.1\lib\servlet.jar"/>

  <property name="name" value="xalan"/>
  <property name="Name" value="Xalan-Java"/>
  <property name="year" value="2000"/>

  <property name="build.compiler" value="classic"/>
  <property name="debug" value="off"/>

  <property name="src.dir" value="./src"/>
  <property name="xpath.reldir" value="org/apache/xpath"/>
  <property name="xalan.reldir" value="org/apache/xalan"/>
  <property name="trax.reldir" value="trax"/>
  <property name="serialize.reldir" value="serialize"/>

  <property name="build.dir" value="./build"/>
  <property name="build.dest" value="${build.dir}/classes"/>
  <property name="build.docs" value="${build.dir}/docs"/>
  <property name="build.samples" value="${build.dir}/samples"/>
  <property name="build.apidocs" value="${build.docs}/apidocs"/>

  <property name="xalanjar" value="${build.dir}/xalan.jar"/>  
  <property name="xalan1jar" value="../build/xalan.jar"/> <!-- still used by StyleBook -->
  <property name="xercesjar" value="./bin/xerces.jar"/>

  <property name="dist.file" value="${name}-j_${version}"/>
  <property name="dist.dir" value="./${dist.file}"/>    <!-- Check dir name dash/underscore 17-Jan-00 SCurcuru -->
  <property name="samples.dir" value="./samples"/>

  <property name="bin.dir" value="./bin"/>
  <property name="xdocs.dir" value="./xdocs"/>
  <property name="version.file" value="org/apache/xalan/processor/XSLProcessorVersion.java"/>
  <property name="xdocs.book" value="${xdocs.dir}/sources/xalan-jlocal.xml"/>
  <property name="xdocs.style" value="${xdocs.dir}/style"/>
  <property name="xdocs.javadocbook" value="${xdocs.dir}/sources/javadocPackages.xml"/>
  <property name="xdocs.javadocloader" value="sbk:/style/loaderjdoc.xml"/>
  <property name="doc.generator" value="org.apache.stylebook.StyleBook"/>
  <property name="doc.generator.styletargz" value="${xdocs.dir}/xml-site-style.tar.gz"/>
  <property name="doc.generator.styletar" value="${xdocs.dir}/xml-site-style.tar"/>
  
  <property name="site.root" value="./xml-site"/>
  <property name="site.dir" value="${site.root}/target/xalan"/>
  <property name="site.book" value="${xdocs.dir}/sources/xalan.xml"/>

  <!-- =================================================================== -->
  <!-- Prepares the xdocs/style and the build directories                  -->
  <!-- =================================================================== -->
  <target name="prepare">
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${build.dest}"/>
  </target>
  <target name="prepare.docs" depends="prepare">
    <!--gunzip src="${doc.generator.styletargz}"/>
    <untar src="${doc.generator.styletar}" dest="${xdocs.dir}"/-->
    <mkdir dir="${build.docs}"/>
    <mkdir dir="${build.apidocs}"/>
  </target>

  <!-- =================================================================== -->
  <!-- Copy over the source code                                           -->
  <!-- We're currently skipping this step, since it seems extraneous if
       you're not going to be using the filtering stuff. -->
  <!-- =================================================================== -->

  <!-- =================================================================== -->
  <!-- Compiles the source tree - xpath (independent xpath engine)         -->
  <!-- =================================================================== -->
  <!-- Note: Still too many cross-dependencies to do this separately -->
  <target name="compile.xpath" depends="prepare">
    <javac srcdir="${src.dir}/${xpath.reldir}" 
           destdir="${build.dest}"
           excludesfile="compat.xpath.excludes" 
           debug="${debug}" />
  </target>

  <!-- =================================================================== -->
  <!-- Compiles the source tree - xalan (the processor)                    -->
  <!-- =================================================================== -->
  <!-- Note: Still too many cross-dependencies to do this separately -->
  <target name="compile.xalan" depends="compile.xpath">
    <javac srcdir="${src.dir}/${xalan.reldir}" 
           destdir="${build.dest}" 
           excludesfile="compat.xslt.excludes"
           debug="${debug}" />
  </target>

  <target name="compile" depends="prepare,compile.trax,compile.serialize">
    <echo message="compile target includes=${src.dir}/${xpath.reldir}/**,${src.dir}/${xalan.reldir}/**" />
    <javac srcdir="${src.dir}" 
           destdir="${build.dest}" 
           includes="${xpath.reldir}/**,${xalan.reldir}/**" 
           excludesfile="compat.excludes" 
           debug="${debug}" />
  </target>

  <!-- =================================================================== -->
  <!-- Creates the xalan JAR                                               -->
  <!-- =================================================================== -->
  <target name="jar" depends="compile">
    <jar jarfile="${xalanjar}" basedir="${build.dest}"/>
  </target>

  <!-- =================================================================== -->
  <!-- Compiles other source trees                                         -->
  <!-- =================================================================== -->
  <target name="compile.trax" depends="prepare">
    <javac srcdir="${src.dir}/${trax.reldir}" 
           destdir="${build.dest}" 
           debug="${debug}"/>
  </target>
  <target name="compile.serialize" depends="prepare">
    <javac srcdir="${src.dir}/${serialize.reldir}" 
           destdir="${build.dest}" 
           debug="${debug}"/>
  </target>
  
  <!-- =================================================================== -->
  <!-- Compiles the samples (servlet excluded) and jars the class files    -->  
  <!-- =================================================================== -->
  <target name="samples" depends="jar">
    <property name="exclude" value="*.xml,*.xsl,*.txt,*.html.*.properties"/>
    <mkdir dir="${build.samples}"/>
    <mkdir dir="${build.samples}/servlet"/>
    <!-- Since the samples are packageless, they must be compiled separately. -->   
    <javac srcdir="${samples.dir}/SimpleTransform" classpath="${java.class.path}:${xalanjar}" 
           destdir="${build.samples}"  excludes="${exclude}"
           debug="${debug}"/>
    <javac srcdir="${samples.dir}/UseStylesheetParam" classpath="${java.class.path}:${xalanjar}"  
           destdir="${build.samples}"  excludes="${exclude}"
           debug="${debug}"/>           
    <javac srcdir="${samples.dir}/TransformToDom" classpath="${java.class.path}:${xalanjar}" 
           destdir="${build.samples}"  excludes="${exclude}"
           debug="${debug}"/>
    <javac srcdir="${samples.dir}/Pipe" classpath="${java.class.path}:${xalanjar}" 
           destdir="${build.samples}"  excludes="${exclude}"
           debug="${debug}"/> 
   <javac srcdir="${samples.dir}/extensions" classpath="${java.class.path}:${xalanjar}" 
           destdir="${build.samples}" excludes="${exclude}" 
           debug="${debug}"/>           
    <jar jarfile="${build.samples}/$xalansamples.jar" basedir="${build.samples}"
         includes="*.class"/>
                   
  </target>
  
   <!-- =================================================================== -->
  <!-- Compiles the sample servlet and jars the class files.                -->  
  <!-- The javax.servlet and javax.servlet.http packages                    -->
  <!-- must be on the classpath                                             -->
  <!-- =================================================================== -->

 <target name="servlet" depends="jar">
     <javac srcdir="${samples.dir}/servlet" classpath="${java.class.path}:${xalanjar}:${servletjar}" 
           destdir="${build.samples}" excludes="${exclude}"
           debug="${debug}"/>      
    <jar jarfile="${build.samples}/servlet/xalanservlet.jar" basedir="${build.samples}"
         includes="servlet/*.*"/>            
 </target>
 
  <!-- =================================================================== -->
  <!-- Generate HTML docs                                                  -->
  <!-- =================================================================== -->
  <target name="docs" depends="prepare.docs">
    <java fork="yes" classname="${doc.generator}" classpath="${java.class.path}:${xalanjar}" 
         args="targetDirectory=${build.docs} ${xdocs.book} ${xdocs.style}"/>    
  </target>
  
  <!-- =================================================================== -->
  <!-- Creates the API documentation                                       -->
  <!-- =================================================================== -->
  <target name="javadocs" depends="prepare.docs">

    <javadoc
         private="true"
         doclet="xalanjdoc.Standard"
         sourcepath="${src.dir}"
         overview="${src.dir}/javadocOverview.html"        packagenames="org.apache.xalan.client,org.apache.xalan.dtm,org.apache.xalan.extensions,org.apache.xalan.lib,org.apache.xalan.processor,org.apache.xalan.res,org.apache.xalan.stree,org.apache.xalan.templates,org.apache.xalan.trace,org.apache.xalan.transformer,org.apache.xalan.utils,org.apache.xalan.xslt,org.apache.xpath,org.apache.xpath.axes,org.apache.xpath.compiler,org.apache.xpath.functions,org.apache.xpath.objects,org.apache.xpath.operations,org.apache.xpath.patterns,org.apache.xpath.res,serialize,serialize.helpers,trax"
         group="Xalan_Core org.apache.xalan*,XPath org.apache.xpath*,TRaX trax*,Serializers serialize*"
         destdir="${build.apidocs}"
         author="true"
         version="true"
         use="true"
         windowtitle="${Name}" 
         doctitle="${Name}"
         bottom="Copyright &#169; ${year} Apache XML Project. All Rights Reserved."
    />
  </target>

  <!-- =================================================================== -->
  <!-- Cleans everything                                                   -->
  <!-- =================================================================== -->
  <target name="clean">
    <deltree dir="${build.dir}"/>
    <deltree dir="${dist.dir}"/>
    <deltree dir="${site.root}"/>
  </target>
  
  <!-- =================================================================== -->
  <!-- Creates the distribution                                            -->
  <!-- =================================================================== -->
  <target name="dist" depends="docs,javadocs,samples,servlet">
    <mkdir dir="${dist.dir}"/>
    <mkdir dir="${dist.dir}/bin"/>    
    <mkdir dir="${dist.dir}/src"/>
    <mkdir dir="${dist.dir}/xdocs"/>
    <mkdir dir="${dist.dir}/docs"/>
    <mkdir dir="${dist.dir}/docs/javadocs"/>
    <mkdir dir="${dist.dir}/samples"/>

    <copydir src="${src.dir}" dest="${dist.dir}/src"/>
    <copydir src="${bin.dir}" dest="${dist.dir}/bin"/>
    <copyfile src="${xalanjar}jar" dest="${dist.dir}/bin/xalan.jar"/>    
    <copydir src="${xdocs.dir}" dest="${dist.dir}/xdocs"/>
    <copydir src="${build.docs}" dest="${dist.dir}/docs"/>

    <copydir src="${samples.dir}" dest="${dist.dir}/samples"/>   
    <copyfile src="${build.samples}/xalansamples.jar" dest="${dist.dir}/samples/xalansamples.jar"/>
    <copyfile src="${build.samples}/servlet/xalanservlet.jar" dest="${dist.dir}/samples/servlet/xalanservlet.jar"/>    
    <!--put xalan.jar and xerces.jar where the sample applet can readily use them-->
    <copyfile src="${xalanjar}" dest="${samples.dir}/AppletXMLtoHTML/xalan.jar"/>
    <copyfile src="${xercesjar}" dest="${samples.dir}/AppletXMLtoHTML/xerces.jar"/>

    <copyfile src="README" dest="${dist.dir}/README"/>
    <copyfile src="README.html" dest="${dist.dir}/README.html"/>
    <copyfile src="CREDITS" dest="${dist.dir}/CREDITS"/>
    <copyfile src="KEYS" dest="${dist.dir}/KEYS"/>
    <copyfile src="License" dest="${dist.dir}/License"/>
    <copyfile src="build.xml" dest="${dist.dir}/build.xml"/>
    
    <zip zipfile="${dist.file}.zip" basedir="${dist.dir}" includes="*"/>
    <tar tarfile="${dist.file}.tar" basedir="${dist.dir}" includes="*"/>
    <gzip src="${dist.file}.tar" zipfile="${dist.file}.tar.gz"/>
  </target>
  
  <!-- =================================================================== -->
  <!-- Creates the documentation tree for the org.apache.xml website       -->
  <!-- =================================================================== -->
  <!--target name="site">
 
    <mkdir dir="${site.dir}"/>
    <mkdir dir="${site.dir}/apidocs"/>
    
    <java fork="yes" classname="${doc.generator}" classpath="${java.class.path}:${build.dir}/${name}.jar" 
         args="targetDirectory=${site.dir} ${site.book} ${xdocs.style}"/>
       
    <copydir src="${build.docs}/resources" dest="${site.dir}/docs/resources"/>
    <copydir src="${build.apidocs}" dest="${site.dir}/apidocs"/>
  </target-->
      

 <!-- =================================================================== -->
  <!-- Compiles the source tree                                            -->
  <!-- =================================================================== -->
  <target name="compilex" depends="prepare">
    <javac srcdir="${src.dir}" destdir="${build.dest}" debug="${debug}"/>
  </target>

  <!-- =================================================================== -->
  <!-- Creates the xalan JAR                                               -->
  <!-- =================================================================== -->
  <target name="jarx" depends="compilex">
    <jar jarfile="${build.dir}/${name}.jar" basedir="${build.dest}"/>
  </target>


</project>
