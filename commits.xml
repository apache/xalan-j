<?xml version="1.0"?>
<Commits>
<Commit category="core">
<Who>johng@apache.org</Who>
<DateCommitted>01/17/2002</DateCommitted>
<Modified>java/src/org/apache/xalan/lib/sql XConnection.java</Modified>
<Log>Fixed second connection problem</Log>
</Commit>
<Commit category="core">
<Who>johng@apache.org</Who>
<DateCommitted>01/17/2002</DateCommitted>
<Modified>java/src/org/apache/xalan/lib/sql SQLDocument.java</Modified>
<Log>Update for new DTM Model</Log>
</Commit>
<Commit category="core">
<Who>johng@apache.org</Who>
<DateCommitted>01/17/2002</DateCommitted>
<Modified>java/src/org/apache/xalan/lib/sql DTMDocument.java</Modified>
<Log>Update for new DTM Model</Log>
</Commit>
<Commit category="core">
<Who>johng@apache.org</Who>
<DateCommitted>01/17/2002</DateCommitted>
<Modified>java/src/org/apache/xalan/lib/sql SQLDocument.java
 DTMDocument.java</Modified>
<Log>Removed Debug</Log>
</Commit>
<Commit category="core">
<Who>jkesselm@apache.org</Who>
<DateCommitted>01/18/2002</DateCommitted>
<Modified>java/src/org/apache/xml/utils FastStringBuffer.java</Modified>
<Log>Whups. There's a possible reentrancy problem when data
 is being serialized from an FSB, thru Sax, back into a new
 chunk of the same FSB; if the append causes a rechunking,
 the serialize loop may break.

 TEMPORARY PATCH; permanant fix to follow. See comments.</Log>
</Commit>
<Commit category="core">
<Who>jkesselm@apache.org</Who>
<DateCommitted>01/18/2002</DateCommitted>
<Modified>java/src/org/apache/xml/utils SuballocatedIntVector.java</Modified>
<Log>&lt;blush&gt;Wrong side of the fencepost...&lt;/blush></Log>
</Commit>
<Commit category="core">
<Who>jkesselm@apache.org</Who>
<DateCommitted>01/23/2002</DateCommitted>
<Modified>java/src/org/apache/xalan/templates ElemTemplate.java
 java/src/org/apache/xalan/transformer TransformerImpl.java
 java/src/org/apache/xml/dtm DTMManager.java
 java/src/org/apache/xml/dtm/ref DTMDefaultBase.java
 DTMManagerDefault.java
 java/src/org/apache/xml/dtm/ref/sax2dtm SAX2DTM.java
 java/src/org/apache/xpath XPathContext.java</Modified>
<Added>java/src/org/apache/xml/dtm/ref/sax2dtm SAX2RTFDTM.java</Added>
<Log>These changes allow us to store multiple Result Tree Fragment (RTF)
 document trees (used when an XSLT variable contains a constructed
 set of nodes) into a single DTM object rather than using a new DTM
 for each RTF. They also permit "tail-pruning" this shared DTM to
 reuse that space as the variables go out of scope.

 The result is a slight performance improvement, and a much more
 significant improvement in storage efficiency. Stylesheets which
 use RTFs heavily should now run in much less memory; in
 one testcase, our "working set" heap size (storage actually in
 use, not counting objects released but not yet GC'd) dropped
 from 12-15MB down to 3-6MB, and heap churn (how quickly
 storage was being allocated and discarded) also reduced
 substantially.

 The code changes needed to support this new scheme are
 surprisingly small. And I believe it may be possible to reduce them
 further, if we're willing to merge the SAX2RTFDTM subclass back
 into its SAX2DTM superclass. I believe that could be done with
 very little adverse impact on other uses of SAX2DTM... but I felt it
 was safer to defer that decision for now.</Log>
</Commit>
<Commit category="xsltc">
<Who>tmiller@apache.org</Who>
<DateCommitted>01/24/2002</DateCommitted>
<Modified>java/src/org/apache/xalan/xsltc/runtime TextOutput.java</Modified>
<Log>bug 1520 fix, escape chars over 0080 instead of 00FF</Log>
</Commit>
<Commit category="xsltc">
<Who>tmiller@apache.org</Who>
<DateCommitted>01/24/2002</DateCommitted>
<Modified>java/src/org/apache/xalan/xsltc/runtime TextOutput.java</Modified>
<Log>bug 1520, adjusted 0080 to 007F in ASCII cutoff</Log>
</Commit>
<Commit category="core">
<Who>mmidy@apache.org</Who>
<DateCommitted>01/25/2002</DateCommitted>
<Modified>java/src/org/apache/xalan/transformer TransformerImpl.java</Modified>
<Log>Bug 5982 and 6022. The variable stack was not being cleared accross 
transforms so that when the transformer is reused, we were using nodesets from 
the previous transform which were using a different DTM. Note that we want keep 
any variables that have been set externally by the user (using 
Transformer.setParameter()).</Log>
</Commit>
<Commit category="core">
<Who>mmidy@apache.org</Who>
<DateCommitted>01/28/2002</DateCommitted>
<Modified>java/src/org/apache/xpath/res XPATHErrorResources.java</Modified>
<Log>bug 4762: Fixed the duplicate error message in XPATH.</Log>
</Commit>
<Commit category="core">
<Who>jkesselm@apache.org</Who>
<DateCommitted>01/28/2002</DateCommitted>
<Modified>java/src/org/apache/xalan/transformer TransformerImpl.java</Modified>
<Log>Bugzilla 4054: Retain previously set output properties when adding new ones.</Log>
</Commit>
<Commit category="core">
<Who>mmidy@apache.org</Who>
<DateCommitted>01/28/2002</DateCommitted>
<Modified>java/src/org/apache/xalan/transformer TransformerImpl.java</Modified>
<Log>Bug 5872. We were using a constructor of TranformerException without the 
locator information. Changed to code to use a locator if info is available.</Log>
</Commit>
<Commit category="core">
<Who>dleslie@apache.org</Who>
<DateCommitted>01/30/2002</DateCommitted>
<Modified>java/src/org/apache/xalan/lib NodeInfo.java</Modified>
<Log>Changed "system id" to "public identifier" in javadoc
 comments for publicId() methods.</Log>
</Commit>
<Commit category="core">
<Who>jkesselm@apache.org</Who>
<DateCommitted>01/30/2002</DateCommitted>
<Modified>java/src/org/apache/xml/dtm/ref/sax2dtm SAX2DTM.java</Modified>
<Log>Bugzilla 2617, part 1: Construct the data structures and access them 
correctly.
 Ignore too-late-to-be-safe requests to enable this feature.

 This doesn't resolve how to rewrite higher-level code so it makes the
 request early enough to be useful.</Log>
</Commit>
<Commit category="core">
<Who>mmidy@apache.org</Who>
<DateCommitted>01/30/2002</DateCommitted>
<Modified>java/src/org/apache/xalan/templates StylesheetComposed.java
 StylesheetRoot.java TemplateList.java
 java/src/org/apache/xalan/transformer TransformerImpl.java</Modified>
<Log>Bug 4987: Changed Apply-imports logic to only apply imports to stylesheets 
that are direct imports. The logic for includes has not changed, we will 
apply-imports to any stylesheet that is imported as a result of an inclusion. 
Note: had to change the order when includes and imports are recomposed!</Log>
</Commit>
<Commit category="core">
<Who>jkesselm@apache.org</Who>
<DateCommitted>01/31/2002</DateCommitted>
<Modified>java/src/org/apache/xalan/lib NodeInfo.java
 java/src/org/apache/xalan/processor
 TransformerFactoryImpl.java
 java/src/org/apache/xalan/transformer TransformerImpl.java
 java/src/org/apache/xalan/xslt Process.java
 java/src/org/apache/xml/dtm/ref DTMManagerDefault.java
 java/src/org/apache/xml/dtm/ref/sax2dtm SAX2DTM.java
 SAX2RTFDTM.java
 java/src/org/apache/xml/utils DefaultErrorHandler.java</Modified>
<Log>Bugzilla 2617: Recreated missing code, changed controls to ensure
 that this mode gets set early enough to be useful and can't be broken
 by being turned on and off during execution.

 NOTE: Current implementation relies on a global static flag in
 TransformerFactoryImpl. We need to rearchitect our APIs slightly
 so configuration hints of this kind can be passed down from top-level
 objects to the back-end code more elegantly. Revisit in future
 releases.</Log>
</Commit>
<Commit category="core">
<Who>mmidy@apache.org</Who>
<DateCommitted>01/31/2002</DateCommitted>
<Modified>java/src/org/apache/xalan/templates ElemApplyTemplates.java</Modified>
<Log>Bug 5505: Need to resolve params before we do anything else, so move code 
that does that above the code that sets up the different node stacks.</Log>
</Commit>
<Commit category="deferred">
<Who>sboag@apache.org</Who>
<DateCommitted>01/31/2002</DateCommitted>
<Modified>java/src/org/apache/xalan/extensions Tag:
 SBOAG_BRANCH_OPTIMIZATION2
 ExtensionHandlerJavaClass.java
 java/src/org/apache/xalan/processor Tag:
 SBOAG_BRANCH_OPTIMIZATION2 ProcessorKey.java
 ProcessorPreserveSpace.java
 ProcessorStripSpace.java StylesheetHandler.java
 XSLTAttributeDef.java XSLTElementProcessor.java
 java/src/org/apache/xalan/templates Tag:
 SBOAG_BRANCH_OPTIMIZATION2 AVT.java AVTPart.java
 AVTPartSimple.java AVTPartXPath.java
 ElemApplyTemplates.java ElemAttribute.java
 ElemCallTemplate.java ElemChoose.java
 ElemCopyOf.java ElemElement.java
 ElemExtensionCall.java ElemForEach.java ElemIf.java
 ElemLiteralResult.java ElemNumber.java
 ElemTemplateElement.java ElemValueOf.java
 ElemVariable.java ElemWhen.java ElemWithParam.java
 FuncDocument.java FuncKey.java Stylesheet.java
 StylesheetRoot.java WhiteSpaceInfo.java
 java/src/org/apache/xalan/trace Tag:
 SBOAG_BRANCH_OPTIMIZATION2 TraceManager.java
 java/src/org/apache/xalan/transformer Tag:
 SBOAG_BRANCH_OPTIMIZATION2 KeyIterator.java
 KeyManager.java KeyRefIterator.java KeyTable.java
 NodeSorter.java ResultTreeHandler.java
 TransformerImpl.java
 java/src/org/apache/xml/dtm/ref Tag:
 SBOAG_BRANCH_OPTIMIZATION2 DTMNodeList.java
 java/src/org/apache/xml/dtm/ref/dom2dtm Tag:
 SBOAG_BRANCH_OPTIMIZATION2 DOM2DTM.java
 java/src/org/apache/xml/utils Tag:
 SBOAG_BRANCH_OPTIMIZATION2 DefaultErrorHandler.java
 NodeVector.java SuballocatedIntVector.java
 java/src/org/apache/xpath Tag: SBOAG_BRANCH_OPTIMIZATION2
 Expression.java VariableStack.java XPath.java
 XPathContext.java
 java/src/org/apache/xpath/axes Tag:
 SBOAG_BRANCH_OPTIMIZATION2 AttributeIterator.java
 AxesWalker.java ChildIterator.java
 ChildTestIterator.java DescendantIterator.java
 FilterExprWalker.java IteratorPool.java
 LocPathIterator.java MatchPatternIterator.java
 OneStepIterator.java OneStepIteratorForward.java
 PredicatedNodeTest.java ReverseAxesWalker.java
 SelfIteratorNoPredicate.java UnionPathIterator.java
 WalkerFactory.java WalkingIterator.java
 WalkingIteratorSorted.java
 java/src/org/apache/xpath/compiler Tag:
 SBOAG_BRANCH_OPTIMIZATION2 Compiler.java
 java/src/org/apache/xpath/functions Tag:
 SBOAG_BRANCH_OPTIMIZATION2 FuncBoolean.java
 FuncCount.java FuncExtFunction.java Function.java
 Function2Args.java Function3Args.java
 FunctionMultiArgs.java FunctionOneArg.java
 java/src/org/apache/xpath/objects Tag:
 SBOAG_BRANCH_OPTIMIZATION2 XNodeSet.java
 XNodeSetForDOM.java XNumber.java XObject.java
 XRTreeFrag.java XRTreeFragSelectWrapper.java
 XString.java XStringForFSB.java
 java/src/org/apache/xpath/operations Tag:
 SBOAG_BRANCH_OPTIMIZATION2 Bool.java Equals.java
 Operation.java UnaryOperation.java Variable.java
 java/src/org/apache/xpath/patterns Tag:
 SBOAG_BRANCH_OPTIMIZATION2 FunctionPattern.java
 NodeTest.java StepPattern.java UnionPattern.java</Modified>
<Added>java/src/org/apache/xalan/processor Tag:
 SBOAG_BRANCH_OPTIMIZATION2 WhitespaceInfoPaths.java
 java/src/org/apache/xalan/templates Tag:
 SBOAG_BRANCH_OPTIMIZATION2 AbsPathChecker.java
 ElemVariablePsuedo.java
 RedundentExprEliminator.java VarNameCollector.java
 XSLTVisitable.java XSLTVisitor.java
 XUnresolvedVariableSimple.java
 java/src/org/apache/xpath/axes Tag:
 SBOAG_BRANCH_OPTIMIZATION2 BasicTestIterator.java
 FilterExprIterator.java
 FilterExprIteratorSimple.java
 HasPositionalPredChecker.java NodeSequence.java
 PathComponent.java UnionChildIterator.java
 java/src/org/apache/xpath/operations Tag:
 SBOAG_BRANCH_OPTIMIZATION2 VariableSafeAbsRef.java</Added>
<Log>Redundent Expression Elimination branch checkin. This branch is for major
 optimization work being done. I expect it to be folded in on the main branch
 within a couple of weeks.

 Goal of branch: around 50% overall performance gain.

 Major architectural changes
 1) Rip out cacheing in all iterators, and move the caching into XNodeSet 
(actually NodeSequence where the caching is done derives from XObject and 
XNodeSet derives from NodeSequence). Lots of other changes went into this, 
including rewriting of some of the xsl:key stuff.

 2) Implementation of a Visitor mechanism for the stylesheet and xpath 
components. Each component for an XPath event is passed an ExpressionOwner, 
which just has a getExpression and setExpression method, which allows us to 
create a list of these, and then be able to do rewrites. This should be a 
generally useful mechanism for all sorts of stuff, and should be considered a 
public API.

 3) Implementation of deepEquality methods for all XPath components, which 
allows us to see if two components are equal.

 4) Implementation of RedundentExprEliminator, which is a derivative from the 
new XSLTVisitor class, which runs over the stylesheet collecting xpaths within 
the same scope, and absolute xpaths that are not context dependent. These are 
then each reduced by walking the list and checking for deep equality (though 
global paths are always reduced). Reduction takes place by creating variables 
that have a special namespace and a non-legal local name. Both full and 
partial path reduction done.

 Not done yet: Add back in the xsl:key caching that I ripped out (not a big 
deal). Could be skipped, with some risk.

 Not done yet: Implement isLast function. With the new stuff, the last() 
function will be slower, so, since most cases are just checking to see if an 
item is the last, I want to rewrite foo[last()] patterns to 
foo[xalan:isLast()]. Could be skipped, with some risk.

 Davanum performance test result: 4x increase in performance.

 Datapower performance suite results: very slight decrease in overall 
performance. :-(

 Smoke test results: All clear when run with Xerces 1.

 To Do on this branch:

 Christina trace/debug API enhancements.
 Possible unroll of recursive evaluation.
 Implement serializers directly off of ResultTreeHandler (and provide 
ContentHandler adapters).
 Specialize and optimize serializers for 80% cases.</Log>
</Commit>
<Commit category="xsltc">
<Who>tmiller@apache.org</Who>
<DateCommitted>02/01/2002</DateCommitted>
<Modified>java/src/org/apache/xalan/xsltc/compiler
 AttributeValueTemplate.java
 AbsoluteLocationPath.java AbsolutePathPattern.java
 AlternativePattern.java AncestorPattern.java
 ApplyImports.java ApplyTemplates.java
 AttributeSet.java BooleanCall.java BinOpExpr.java
 BooleanExpr.java CallTemplate.java CastExpr.java
 CeilingCall.java Choose.java Comment.java
 DecimalFormatting.java ConcatCall.java
 Constants.java ContainsCall.java Copy.java
 CopyOf.java CurrentCall.java DocumentCall.java
 EqualityExpr.java Import.java If.java
 ElementAvailableCall.java Expression.java
 Fallback.java FilterExpr.java FilterParentPath.java
 FloorCall.java FlowList.java ForEach.java
 FormatNumberCall.java FunctionAvailableCall.java
 FunctionCall.java GenerateIdCall.java
 IdKeyPattern.java Include.java IntExpr.java
 Key.java KeyCall.java LangCall.java LastCall.java
 LiteralAttribute.java LiteralElement.java
 LiteralExpr.java LocalNameCall.java
 NamespaceAlias.java LogicalExpr.java Message.java
 Mode.java NameBase.java NameCall.java
 NamespaceUriCall.java NotCall.java Number.java
 NumberCall.java Output.java Param.java
 ParentLocationPath.java ParameterRef.java
 ParentPattern.java PositionCall.java
 RelationalExpr.java Predicate.java Sort.java
 ProcessingInstruction.java RealExpr.java
 VariableRef.java RoundCall.java ValueOf.java
 SimpleAttributeValue.java StartsWithCall.java
 Stylesheet.java StringCall.java
 StringLengthCall.java StepPattern.java
 Template.java TestSeq.java Text.java
 TopLevelElement.java TransletOutput.java
 UnaryOpExpr.java UnionPathExpr.java
 UnparsedEntityUriCall.java UseAttributeSets.java
 LongExpr.java Variable.java Whitespace.java
 XslAttribute.java WithParam.java XSLTC.java
 XslElement.java UnsupportedElement.java
 VariableBase.java VariableRefBase.java
 FilteredAbsoluteLocationPath.java
 SyntaxTreeNode.java Step.java UnresolvedRef.java
 ProcessingInstructionPattern.java</Modified>
<Log>changed de.fub.bytecode to org.apache.bcel</Log>
</Commit>
<Commit category="xsltc">
<Who>tmiller@apache.org</Who>
<DateCommitted>02/01/2002</DateCommitted>
<Modified>java/src/org/apache/xalan/xsltc/compiler/util
 NamedMethodGenerator.java NodeCounterGenerator.java
 NodeSetType.java NodeSortRecordGenerator.java
 NodeType.java RealType.java ReferenceType.java
 ResultTreeType.java RtMethodGenerator.java
 SlotAllocator.java StringType.java
 TestGenerator.java Util.java LongType.java</Modified>
<Log>changed de.fub.bytecode to org.apache.bcel</Log>
</Commit>
<Commit category="core">
<Who>jkesselm@apache.org</Who>
<DateCommitted>02/01/2002</DateCommitted>
<Modified>java/src/org/apache/xml/utils FastStringBuffer.java</Modified>
<Log>Bugzilla 6182. Darned fence posts; always either too many or not enough... 
&lt;grin/&gt;</Log>
</Commit>
<Commit category="xsltc">
<Who>tmiller@apache.org</Who>
<DateCommitted>02/01/2002</DateCommitted>
<Modified>java/src/org/apache/xalan/xsltc/compiler/util
 AttributeSetMethodGenerator.java BooleanType.java
 ClassGenerator.java CompareGenerator.java
 FilterGenerator.java IntType.java
 MatchGenerator.java MethodGenerator.java
 MethodType.java Type.java VoidType.java</Modified>
<Log>changed de.fub.bytecode to org.apache.bcel</Log>
</Commit>
<Commit category="core">
<Who>mmidy@apache.org</Who>
<DateCommitted>02/01/2002</DateCommitted>
<Modified>java/src/org/apache/xalan/transformer TransformerImpl.java
 java/src/org/apache/xpath VariableStack.java
 XPathContext.java</Modified>
<Log>Bug 6156: Change variable stack reset to just get a new object. Also make 
sure that the stack of result tree fragments is also cleaned ot during a reset.</Log>
</Commit>
<Commit category="core">
<Who>mmidy@apache.org</Who>
<DateCommitted>02/04/2002</DateCommitted>
<Modified>java/src/org/apache/xpath/objects XBoolean.java
 XNodeSet.java XNumber.java XObject.java
 XRTreeFrag.java XString.java
 java/src/org/apache/xpath/operations Equals.java</Modified>
<Log>Bug 5851: Make sure that the equal operation is evaluated by order of 
precedence of the operands, as defined by XSLT.</Log>
</Commit>
<Commit category="core">
<Who>jkesselm@apache.org</Who>
<DateCommitted>02/04/2002</DateCommitted>
<Modified>java/src/org/apache/xpath/objects XStringForFSB.java</Modified>
<Log>Bugzilla 5346: Prevent mantissa overflow when converting string to double.
 There is still a possible edge-case, since I detect overflow on decimal digit
 bounds rather than on bit bounds; I'm not sure what the IEEE spec calls for.</Log>
</Commit>
<Commit category="core">
<Who>jkesselm@apache.org</Who>
<DateCommitted>02/04/2002</DateCommitted>
<Modified>java/src/org/apache/xpath/objects XStringForFSB.java</Modified>
<Log>Bugzilla 5346: My first-cut messed up fractional values. This one is
 somewhat better.

 There's an open issue w/r/t numbers with many digits after the
 decimal point, regarding limits on how large a power of 10 can
 be contained in a long. In that one case I'm falling back on successive
 divisions (though as few as possible), and some loss of precision
 may result.

 Need to find a better algorithm...</Log>
</Commit>
<Commit category="core">
<Who>jkesselm@apache.org</Who>
<DateCommitted>02/04/2002</DateCommitted>
<Modified>java/src/org/apache/xpath/objects XStringForFSB.java</Modified>
<Log>Bugzilla 5346: Oops. Forgot to take out a debugging printout.</Log>
</Commit>
<Commit category="core">
<Who>jkesselm@apache.org</Who>
<DateCommitted>02/05/2002</DateCommitted>
<Modified>java/src/org/apache/xpath/objects XStringForFSB.java</Modified>
<Log>Bugzilla 5346: Responding to the re-open; more direct and reliable
 edge-case test. This does lose a few low bits on many-digit values,
 so it is not the best long-term solution.</Log>
</Commit>
<Commit category="core">
<Who>jkesselm@apache.org</Who>
<DateCommitted>02/05/2002</DateCommitted>
<Modified>java/src/org/apache/xpath/objects XStringForFSB.java</Modified>
<Log>Bug 5346: One more (last, I hope) edge case.</Log>
</Commit>
<Commit category="core">
<Who>jkesselm@apache.org</Who>
<DateCommitted>02/05/2002</DateCommitted>
<Modified>java/src/org/apache/xpath/objects XStringForFSB.java</Modified>
<Log>Bug 5346: Gaaah. This regressions was just plain foolish flailing. "Less 
haste, more speed."</Log>
</Commit>
<Commit category="xsltc">
<Who>tmiller@apache.org</Who>
<DateCommitted>02/05/2002</DateCommitted>
<Modified>java/src/org/apache/xalan/xsltc/runtime TextOutput.java</Modified>
<Log>bug 1520, spec chars in href attributes</Log>
</Commit>
<Commit category="core">
<Who>jkesselm@apache.org</Who>
<DateCommitted>02/05/2002</DateCommitted>
<Modified>java/src/org/apache/xalan/serialize CharInfo.java</Modified>
<Log>Bug 5857: Reusing objects that reuse objects has threading concerns.
 Three possible solutions: Don't reuse, synchronize reuse, or rewrite
 to avoid using the objects in the first place. See comments in code.</Log>
</Commit>
<Commit category="core">
<Who>jkesselm@apache.org</Who>
<DateCommitted>02/06/2002</DateCommitted>
<Modified>java/src/org/apache/xml/dtm/ref DTMManagerDefault.java
 IncrementalSAXSource.java
 IncrementalSAXSource_Filter.java
 IncrementalSAXSource_Xerces.java
 java/src/org/apache/xml/dtm/ref/sax2dtm SAX2DTM.java</Modified>
<Log>Bug 4244: Incremental wasn't setting up correctly for the
 DTDHandler stream. It never occurred to me that XSLT would
 ever have a use for unparsed entities...</Log>
</Commit>
<Commit category="core">
<Who>curcuru@apache.org</Who>
<DateCommitted>02/06/2002</DateCommitted>
<Modified>java/src/org/apache/xalan Version.java
 java/src/org/apache/xalan/processor XSLProcessorVersion.java</Modified>
<Log>Whoops! Never updated release number to 2.3 in these version files!</Log>
</Commit>
<Commit category="core">
<Who>curcuru@apache.org</Who>
<DateCommitted>02/06/2002</DateCommitted>
<Modified>java/src/org/apache/xalan/res XSLTInfo.properties</Modified>
<Log>updated version number to 2.3</Log>
</Commit>
<Commit category="core">
<Who>mmidy@apache.org</Who>
<DateCommitted>02/07/2002</DateCommitted>
<Modified>java/src/org/apache/xpath SourceTreeManager.java</Modified>
<Log>Bug 6304: Remove print stacktrace</Log>
</Commit>
<Commit category="xsltc">
<Who>tmiller@apache.org</Who>
<DateCommitted>02/07/2002</DateCommitted>
<Modified>java/src/org/apache/xalan/xsltc/runtime TextOutput.java</Modified>
<Log>bug 1520, updating href attr spec char handling</Log>
</Commit>
<Commit category="core">
<Who>jkesselm@apache.org</Who>
<DateCommitted>02/08/2002</DateCommitted>
<Modified>java/src/org/apache/xalan/extensions
 XSLProcessorContext.java
 java/src/org/apache/xalan/lib/sql DTMDocument.java
 java/src/org/apache/xalan/templates ElemForEach.java
 FuncDocument.java FuncKey.java
 java/src/org/apache/xalan/transformer KeyIterator.java
 TransformerHandlerImpl.java TransformerImpl.java
 java/src/org/apache/xml/dtm DTM.java
 java/src/org/apache/xml/dtm/ref DTMDefaultBase.java
 DTMDefaultBaseIterators.java DTMDocumentImpl.java
 DTMNodeProxy.java
 java/src/org/apache/xml/dtm/ref/sax2dtm SAX2RTFDTM.java
 java/src/org/apache/xpath/axes IteratorPool.java</Modified>
<Log>Bugzilla 6314: Additional support changes for multiple RTFs per DTM.
 Many files affected, but the basic change is that dtm.getDocument()
 with no arguments is meaningless when there are multiple docs in
 a single DTM object; instead, folks should use the new getRootNode()
 method or getOwnerDocument(), both of which take a node as input
 and thus more clearly identify which document we're referring to.</Log>
</Commit>
</Commits>
