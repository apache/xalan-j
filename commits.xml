<?xml version="1.0"?>
<Commits>
<Commit category="core">
<Who>sboag@apache.org</Who>
<DateCommitted>07/03/2001</DateCommitted>
<Modified>java/src/org/apache/xml/dtm/ref DTMManagerDefault.java</Modified>
<Log>Since the real root of our tree may be a DocumentFragment, we need to
 use getParent to find the root, instead of getOwnerDocument. Otherwise
 DOM2DTM#getHandleOfNode will be very unhappy.
 Result of report via private mail by Carsten Ziegeler of breakage
 in Cocoon.</Log>
</Commit>
<Commit category="core">
<Who>sboag@apache.org</Who>
<DateCommitted>07/05/2001</DateCommitted>
<Modified>java/src/org/apache/xalan/serialize SerializerToHTML.java
 SerializerToXML.java</Modified>
<Log>Made m_maxCharacter, accumDefaultEscape,
 accumDefaultEntity, and m_isRawStack
 protected by request from Johannes Farrenkopf
 and Frank Nestel.</Log>
</Commit>
<Commit category="core">
<Who>sboag@apache.org</Who>
<DateCommitted>07/05/2001</DateCommitted>
<Modified>java/src/org/apache/xpath/functions FuncNormalizeSpace.java</Modified>
<Log>In executeCharsToContentHandler check first for
 DTM.NULL before trying to get the DTM.</Log>
</Commit>
<Commit category="core">
<Who>sboag@apache.org</Who>
<DateCommitted>07/05/2001</DateCommitted>
<Modified>java/src/org/apache/xml/utils FastStringBuffer.java</Modified>
<Log>Fix bug reported by "Carsten Ziegeler" &lt;cziegeler@sundn.de&gt;.
 Test for this is whitespace23.</Log>
</Commit>
<Commit category="core">
<Who>jkesselm@apache.org</Who>
<DateCommitted>07/05/2001</DateCommitted>
<Modified>java/src/org/apache/xml/utils SuballocatedIntVector.java</Modified>
<Log>Drop some bounds tests for cases which shouldn't arise in the first place, 
since this is an inner-loop method.</Log>
</Commit>
<Commit category="core">
<Who>jkesselm@apache.org</Who>
<DateCommitted>07/05/2001</DateCommitted>
<Modified>java/src/org/apache/xml/utils SuballocatedByteVector.java
 SuballocatedIntVector.java</Modified>
<Log>Synch SuballocatedByteVector with changed SuballocatedIntVector</Log>
</Commit>
<Commit category="core">
<Who>sboag@apache.org</Who>
<DateCommitted>07/05/2001</DateCommitted>
<Modified>java/src/org/apache/xml/dtm/ref CoroutineSAXParser.java</Modified>
<Log>Revert back to throwing a shutdownException if (arg == null) in co_yield. I 
see this
 occur if the parser is Crimson with output\output01, and it causes
 a hang if the shutdownException is not thrown.</Log>
</Commit>
<Commit category="core">
<Who>sboag@apache.org</Who>
<DateCommitted>07/06/2001</DateCommitted>
<Modified>java/src/org/apache/xalan/serialize SerializerToXML.java</Modified>
<Log>Make accumDefaultEntity and accumDefaultEscape non-final.</Log>
</Commit>
<Commit category="core">
<Who>sboag@apache.org</Who>
<DateCommitted>07/06/2001</DateCommitted>
<Modified>java/src/org/apache/xpath/axes ChildTestIterator.java
 OneStepIterator.java
 java/src/org/apache/xpath/functions FuncExtFunction.java</Modified>
<Log>Fix for John G. for the SQL extension: handle return types of
 DTM and DTMAxisIterator.</Log>
</Commit>
<Commit category="xsltc">
<Who>morten@apache.org</Who>
<DateCommitted>07/09/2001</DateCommitted>
<Modified>java/src/org/apache/xalan/xsltc/compiler Constants.java
 Param.java StepPattern.java Stylesheet.java
 SyntaxTreeNode.java Variable.java WithParam.java
 java/src/org/apache/xalan/xsltc/dom KeyIndex.java
 java/src/org/apache/xalan/xsltc/runtime
 AbstractTranslet.java BasisLibrary.java
 DefaultRun.java Parameter.java TextOutput.java</Modified>
<Log>Loads of small fixes and a good few comments added to the source code.
 The major fixes are one fix for variable/parameter handlingi and one for
 key/id index handling. XSLTC now correctly updates the value of parameters
 with changing default values, such as with
 &lt;xsl:param name="foo" select="current()"/&gt;.
 Also updated bit-arrays to correctly return single node ids, so that the
 key() and id() functions return the correct number of nodes (they would
 sometimes skip the first node in the defined node set for the key/id).
 Added some structure and loads of comments to the Translet base class.
 PR: n/a
 Obtained from: n/a
 Submitted by: morten@xml.apache.org
 Reviewed by: morten@xml.apache.org</Log>
</Commit>
<Commit category="core">
<Who>sboag@apache.org</Who>
<DateCommitted>07/09/2001</DateCommitted>
<Modified>java/src/org/apache/xalan/transformer TransformerImpl.java</Modified>
<Log>In executeChildTemplates, somehow there was a popMode without
 a corresponding pushMode. The pushMode was added.
 Addresses bug posted by Stephane Bailliez &lt;sbailliez@imediation.com&gt;
 on the xalan-dev list on 07/09/2001 07:28 AM.</Log>
</Commit>
<Commit category="core">
<Who>garyp@apache.org</Who>
<DateCommitted>07/10/2001</DateCommitted>
<Modified>java/src/org/apache/xalan/extensions ExpressionContext.java
 java/src/org/apache/xalan/templates StylesheetRoot.java
 java/src/org/apache/xpath VariableStack.java
 XPathContext.java</Modified>
<Log>Resolve bugzilla 2355 
&lt;http://nagoya.apache.org/bugzilla/show_bug.cgi?id=2355&gt;. To make the 
functionality clearer, I've changed the method name from getVariable to 
getVariableOrParam since the routine will pick up either one. Also fixed a 
bug where top level variables and parameters were not getting marked as such.</Log>
</Commit>
<Commit category="core">
<Who>garyp@apache.org</Who>
<DateCommitted>07/10/2001</DateCommitted>
<Modified>java/src/org/apache/xalan/lib Extensions.java
 java/src/org/apache/xpath XPathContext.java</Modified>
<Log>Resolve bugzilla 2523 
&lt;http://nagoya.apache.org/bugzilla/show_bug.cgi?id=2523&gt;. evaluate extension 
function was not refactored with DTM. Also need to add function to 
XPathContext.XPathExpressionContext to allow an extension to obtain the 
associated XPathContext.</Log>
</Commit>
<Commit category="core">
<Who>mmidy@apache.org</Who>
<DateCommitted>07/10/2001</DateCommitted>
<Modified>java/src/org/apache/xpath/axes DescendantIterator.java</Modified>
<Log>Fix problem with descendant-or-self and from root pattern. When from root, 
descedant or self was not recognized.</Log>
</Commit>
<Commit category="xsltc">
<Who>morten@apache.org</Who>
<DateCommitted>07/10/2001</DateCommitted>
<Modified>java/src/org/apache/xalan/xsltc/compiler
 AncestorPattern.java AttributeSet.java
 CallTemplate.java CastExpr.java EqualityExpr.java
 Expression.java FunctionCall.java If.java
 Import.java Include.java Mode.java NameBase.java
 Param.java ParameterRef.java Parser.java
 StepPattern.java SyntaxTreeNode.java Template.java
 TestSeq.java Variable.java VariableRef.java
 XSLTC.java XslAttribute.java
 java/src/org/apache/xalan/xsltc/compiler/util ErrorMsg.java
 ReferenceType.java
 java/src/org/apache/xalan/xsltc/dom MultiDOM.java
 StepIterator.java
 java/src/org/apache/xalan/xsltc/runtime BasisLibrary.java</Modified>
<Log>A wide range of fixes provided by Erwin Bolwidt.
 o) fix for long IF and GOTO instructions inside translets.
 'wide' GOTOs are now used (GOTO_W) instead of plain GOTO
 to allow longer jump offsets
 o) fix for illegal field/method names in the translet.
 Methods and fields no longer contain the '.' or '-' characters
 o) source filenames (and if possible also line numbers) are now
 provided with error and warning messages
 o) external functions that are not supported by XSLTC do not cause
 compile errors. They will still cause a warning message at
 compile-time if they are not wrapped in proper &lt;xsl:if&gt; or
 &lt;xsl:when&gt; elements that test on the availability of the function,
 and will cause a runtime error if the function is attempted called.
 o) added type cast from reference-type to node-type
 o) some other smaller fixes to prevent null-pointer exceptions
 Other changes:
 o) code cleanup and some added comments
 PR: n/a
 Obtained from: n/a
 Submitted by: Erwin Bolwidt &lt;ejb@klomp.org&gt;
 Reviewed by: Morten Jorgensen &lt;morten@xml.apache.org></Log>
</Commit>
<Commit category="core">
<Who>jkesselm@apache.org</Who>
<DateCommitted>07/10/2001</DateCommitted>
<Modified>java/src/org/apache/xml/dtm/ref/dom2dtm DOM2DTM.java</Modified>
<Log>Quick patch to handle case where someone wants to build a DTM from
 an Element rather than from a Document. The Attr handling might want to
 move down into addNode.

 This opens several cans of worms -- what if the next user wants the
 root of their DTM to be an EntityReference node, which has no DTM
 node equivalent -- but we'll eat those when we get to them.</Log>
</Commit>
<Commit category="core">
<Who>garyp@apache.org</Who>
<DateCommitted>07/10/2001</DateCommitted>
<Modified>java/src/org/apache/xalan/lib Extensions.java</Modified>
<Log>Modify distinct() extension so that it no longer relies on DOMHelper which is 
deprecated but uses ExpressionContext.toString().</Log>
</Commit>
<Commit category="core">
<Who>sboag@apache.org</Who>
<DateCommitted>07/11/2001</DateCommitted>
<Modified>java/src/org/apache/xalan/res XSLTErrorResources.java
 java/src/org/apache/xalan/trace PrintTraceListener.java
 java/src/org/apache/xalan/transformer TransformerImpl.java
 java/src/org/apache/xalan/xslt Process.java
 java/src/org/apache/xml/dtm DTM.java
 java/src/org/apache/xml/dtm/ref DTMDocumentImpl.java
 ExpandedNameTable.java
 java/src/org/apache/xml/dtm/ref/dom2dtm DOM2DTM.java
 java/src/org/apache/xml/dtm/ref/sax2dtm SAX2DTM.java</Modified>
<Added>java/src/org/apache/xalan/lib NodeInfo.java
 java/src/org/apache/xalan/transformer XalanProperties.java
 java/src/org/apache/xml/dtm/ref NodeLocator.java</Added>
<Log>Application of patch submitted by Ovidiu Predescu &lt;ovidiu@cup.hp.com&gt;
 for file, line, column number information for XML source document.

 [A made one change: m_sourceSystemId, m_sourceLine, and
 m_sourceColumn are not created with the member variable
 initializer, since they are initialized in setProperty.]

 The following patch is a rework of a previous patch I've submitted on
 May 24 against the Stree model, current at that time. This time the
 patch is against the DTM model, and makes use of DTM features to
 optimize the lookup time and storage requirements. I hope this time
 the patch gets incorporated in the CVS repository, before any major
 rework happens again ;-).

 As with the previous patch, there is no overhead in space or time if
 source information is not needed.

 From a user perspective, this feature can be turned on by passing the
 -L flag to Xalan when invoking it from the command
 line. Programmatically you can also enable it by invoking the
 setProperty method on the TransformerImpl:

 TransformerImpl impl = ((TransformerImpl) transformer);
 
impl.setProperty(org.apache.xalan.transformer.XalanProperties.SOURCE_LOCATION,
 Boolean.TRUE);

 A Transformer "property" is different from a "feature": while a
 feature is specific to all the transformer instances and usually
 refers to an implementation aspect, a property is a runtime capability
 that is set per Transformer instance. Currently the only property
 added by this patch is the source location in the XML source document.

 The patch adds two methods to the DTM interface:

 public void setProperty(String property, Object value);
 public SourceLocator getSourceLocatorFor(int node);

 The second method is used to obtain the source location given a node
 handle.

 There are two ways you can make use of the source location. The first
 one is from within a stylesheet, where you can have something like
 this:

 &lt;xsl:stylesheet
 xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
 xmlns:nodeinfo="xalan://org.apache.xalan.lib.NodeInfo"
 version="1.0"&gt;

 &lt;xsl:template match="*"&gt;
 //node &lt;xsl:value-of select="name()"/&gt;
 //file &lt;xsl:value-of select="nodeinfo:systemId()"/&gt;
 //line &lt;xsl:value-of select="nodeinfo:lineNumber()"/&gt;
 //column &lt;xsl:value-of select="nodeinfo:columnNumber()"/&gt;
 &lt;xsl:apply-templates/&gt;
 &lt;/xsl:template&gt;

 &lt;/xsl:stylesheet&gt;

 If no arguments are passed to the systemId(), lineNumber() or
 columnNumber() functions, the corresponding information of the current
 context node is returned. A node can be passed as argument to the
 above functions, in which case the corresponding information about
 that node is returned. If a node set containing multiple nodes is
 passed as argument, only the information of the first node in the set
 is returned.

 The second way of obtaining the source location is
 programmatically. Given a Node instance, one can obtain the owner DTM
 and the node handle (an integer) that represents the
 node. Unfortunately I didn't see any way of hiding this: if you find
 one please let me know and I'll fix it.

 The following example is extracted from PrintTraceListener and
 illustrates the API:

 Node sourceNode = ev.m_sourceNode;
 int nodeHandler = ((DTMNodeProxy)sourceNode).getDTMNodeNumber();
 SourceLocator locator = ((DTMNodeProxy)sourceNode).getDTM()
 .getSourceLocatorFor(nodeHandler);

 m_pw.println("Selected source node '" + sourceNode.getNodeName()
 + "', at " + locator);</Log>
</Commit>
<Commit category="core">
<Who>garyp@apache.org</Who>
<DateCommitted>07/11/2001</DateCommitted>
<Modified>java/src/org/apache/xpath/compiler Compiler.java</Modified>
<Log>Fix bug 2175 &lt;http://nagoya.apache.org/bugzilla/show_bug.cgi?id=2175&gt; by 
adding the current time to the method key to ensure method key uniqueness. 
Multiple Compilers were getting the same hashCode, particularly in Visual Age 
for Java, due to aggressive garbage collection. Added the current time in 
mills to distinguish between the different functions being compiled.</Log>
</Commit>
<Commit category="core">
<Who>garyp@apache.org</Who>
<DateCommitted>07/11/2001</DateCommitted>
<Modified>java/src/org/apache/xalan/templates ElemVariable.java
 StylesheetRoot.java
 java/src/org/apache/xpath VariableStack.java
 java/src/org/apache/xpath/operations Variable.java</Modified>
<Log>Resolve bugzilla 2355 
&lt;http://nagoya.apache.org/bugzilla/show_bug.cgi?id=2355&gt;. Added code to 
populate m_index for global variables and parameters. If the backward search 
for templates reaches the top level, use the list of composed top-level 
variables and parameters from StylesheetRoot.</Log>
</Commit>
<Commit category="core">
<Who>sboag@apache.org</Who>
<DateCommitted>07/11/2001</DateCommitted>
<Modified>java/src/org/apache/xml/dtm/ref DTMNodeProxy.java</Modified>
<Log>Now implements DocumentFragment.</Log>
</Commit>
<Commit category="core">
<Who>dleslie@apache.org</Who>
<DateCommitted>07/11/2001</DateCommitted>
<Modified>java/src/org/apache/xalan/res XSLTInfo.properties</Modified>
<Log>Updated version to 2.2.0.</Log>
</Commit>
<Commit category="core">
<Who>dleslie@apache.org</Who>
<DateCommitted>07/11/2001</DateCommitted>
<Modified>java/src/org/apache/xalan/processor XSLProcessorVersion.java</Modified>
<Log>Updated version to 2.2.0.</Log>
</Commit>
<Commit category="core">
<Who>sboag@apache.org</Who>
<DateCommitted>07/11/2001</DateCommitted>
<Modified>java/src/org/apache/xml/dtm/ref DTMNodeProxy.java</Modified>
<Log>Fixed very ugly bug, left-over from DTM1, in getValue, where +1 was being 
added per the old attribute structure of DTM1.</Log>
</Commit>
<Commit category="core">
<Who>johng@apache.org</Who>
<DateCommitted>07/12/2001</DateCommitted>
<Modified>java/src/org/apache/xalan/lib/sql ConnectionPool.java
 DefaultConnectionPool.java PooledConnection.java
 QueryParameter.java XConnection.java</Modified>
<Added>java/src/org/apache/xalan/lib/sql ConnectionPoolManager.java
 ObjectArray.java SQLDocument.java
 SQLErrorDocument.java</Added>
<Removed>java/src/org/apache/xalan/lib/sql Column.java
 ColumnAttribute.java ColumnData.java
 ColumnHeader.java ExtensionError.java Row.java
 RowSet.java SQLExtensionError.java
 StreamableNode.java XConnectionPoolManager.java
 XStatement.java</Removed>
<Log>First round of changes to port DOM mode to DTM Mode
 Submitted by: John Gentilin mailto://johng@apache.org</Log>
</Commit>
<Commit category="xsltc">
<Who>morten@apache.org</Who>
<DateCommitted>07/12/2001</DateCommitted>
<Modified>java/src/org/apache/xalan/xsltc/compiler Parser.java
 SyntaxTreeNode.java XSLTC.java</Modified>
<Log>Cleaned up the XSLTC compiler class in an attempt to make it more flexible.
 This class was originally written as a command-line interface, but it has
 now grown huge and messy. I separated the command-line stuff from the
 methods that make up the actual functionality and made some methods public.
 This is part of the preparation for our new implementation of the JAXP
 Templates object.
 PR: n/a
 Obtained from: n.a
 Submitted by: morten@xml.apache.org
 Reviewed by: morten@xml.apache.org</Log>
</Commit>
<Commit category="xsltc">
<Who>morten@apache.org</Who>
<DateCommitted>07/12/2001</DateCommitted>
<Modified>java/src/org/apache/xalan/xsltc/runtime DefaultRun.java</Modified>
<Added>java/src/org/apache/xalan/xsltc/cmdline Compile.java
 Transform.java</Added>
<Log>Extracted the command-line stuff from the core XSLTC packages. The command-
 line handling is now in xalan.xsltc.cmdline.Compile and
 xalan.xsltc.cmdline.Transform. The command-line stuff is still left in
 xalan.xsltc.compiler.XSLTC and xalan.xsltc.runtime.DefaultRun for backwards
 compatability. This should be removed shortly.
 PR: n/a
 Obtained from: n/a
 Submitted by: morten@xml.apache.org
 Reviewed by: morten@xml.apache.org</Log>
</Commit>
<Commit category="xsltc">
<Who>morten@apache.org</Who>
<DateCommitted>07/12/2001</DateCommitted>
<Modified>java/src/org/apache/xalan/xsltc/cmdline Compile.java
 java/src/org/apache/xalan/xsltc/compiler XSLTC.java</Modified>
<Added>java/src/org/apache/xalan/xsltc/cmdline/getopt GetOpt.java
 GetOptsException.java IllegalArgumentException.java
 MissingOptArgException.java
 java/src/org/apache/xalan/xsltc/trax TemplatesImpl.java
 TransformerImpl.java</Added>
<Removed>java/src/org/apache/xalan/xsltc/util/getopt GetOpt.java
 GetOptsException.java IllegalArgumentException.java
 MissingOptArgException.java</Removed>
<Log>Moved the org.apache.xalan.xsltc.util.getopt package to
 org.apache.xalan.xsltc.cmdline.getopt. Also added some skeleton
 code in a new org.apache.xalan.xsltc.trax directory.
 PR: n/a
 Obtained from: n/a
 Submitted by: morten@xml.apache.org
 Reviewed by: morten@xml.apache.org</Log>
</Commit>
<Commit category="xsltc">
<Who>morten@apache.org</Who>
<DateCommitted>07/12/2001</DateCommitted>
<Modified>java/src/org/apache/xalan/xsltc/trax TransletTemplates.java</Modified>
<Log>minor adjustment
 Submitted by: morten@xml.apache.org
 Reviewed by: morten@xml.apache.org</Log>
</Commit>
<Commit category="xsltc">
<Who>tmiller@apache.org</Who>
<DateCommitted>07/12/2001</DateCommitted>
<Modified>java/src/org/apache/xalan/xsltc/trax
 TransformerFactoryImpl.java</Modified>
<Log>removed obselete try/catch</Log>
</Commit>
<Commit category="xsltc">
<Who>morten@apache.org</Who>
<DateCommitted>07/12/2001</DateCommitted>
<Modified>java/src/org/apache/xalan/xsltc/compiler XSLTC.java
 java/src/org/apache/xalan/xsltc/runtime
 AbstractTranslet.java
 java/src/org/apache/xalan/xsltc/trax TemplatesImpl.java
 TransformerFactoryImpl.java TransformerImpl.java</Modified>
<Removed>java/src/org/apache/xalan/xsltc/trax TransletTemplates.java</Removed>
<Log>A first stab at our new TrAX design.`
 Submitted by: morten@xml.apache.org
 Reviewed by: morten@xml.apache.org</Log>
</Commit>
<Commit category="core">
<Who>mmidy@apache.org</Who>
<DateCommitted>07/12/2001</DateCommitted>
<Modified>java/src/org/apache/xml/dtm/ref/sax2dtm SAX2DTM.java</Modified>
<Log>Check if locator property is set before trying to use locator fields</Log>
</Commit>
<Commit category="core">
<Who>mmidy@apache.org</Who>
<DateCommitted>07/12/2001</DateCommitted>
<Modified>java/src/org/apache/xalan/trace PrintTraceListener.java</Modified>
<Log>Don't print locator message if locator is null</Log>
</Commit>
<Commit category="core">
<Who>sboag@apache.org</Who>
<DateCommitted>07/12/2001</DateCommitted>
<Modified>java/src/org/apache/xalan/transformer
 TransformerHandlerImpl.java</Modified>
<Log>In startDocument, run m_contentHandler.startDocument before you start the 
thread.</Log>
</Commit>
<Commit category="core">
<Who>sboag@apache.org</Who>
<DateCommitted>07/12/2001</DateCommitted>
<Modified>java/src/org/apache/xalan/transformer TransformerImpl.java</Modified>
<Log>Call wait for initial events before the the transform is started.</Log>
</Commit>
<Commit category="core">
<Who>sboag@apache.org</Who>
<DateCommitted>07/12/2001</DateCommitted>
<Modified>java/src/org/apache/xml/dtm/ref CoroutineSAXParser.java</Modified>
<Log>Allow co_yield to be called after the parse has finished.</Log>
</Commit>
<Commit category="core">
<Who>sboag@apache.org</Who>
<DateCommitted>07/12/2001</DateCommitted>
<Modified>java/src/org/apache/xalan/lib/sql SQLDocument.java
 SQLErrorDocument.java</Modified>
<Log>Added setProperty and getSourceLocatorFor empty methods.</Log>
</Commit>
<Commit category="core">
<Who>garyp@apache.org</Who>
<DateCommitted>07/13/2001</DateCommitted>
<Modified>java/src/org/apache/xml/dtm/ref/dom2dtm DOM2DTM.java</Modified>
<Log>Fix problem reported by Carsten Ziegeler &lt;cziegeler@sundn.de&gt;. Using 
ApplyXPath (or doing a transformation) with DOM input was resulting in an NPE 
due to declareNamespaceInContext() being called before setting m_exptype which 
is needed by declareNamespaceInContext().</Log>
</Commit>
<Commit category="xsltc">
<Who>morten@apache.org</Who>
<DateCommitted>07/13/2001</DateCommitted>
<Modified>java/src/org/apache/xalan/xsltc/compiler XSLTC.java
 java/src/org/apache/xalan/xsltc/trax TemplatesImpl.java
 TransformerFactoryImpl.java TransformerImpl.java</Modified>
<Log>A few minor adjustments to yesterdays JAXP/TrAX implementation. These is one
 change in the way the compiler (XSLTC) generates bytecode arrays, and the
 rest is basically a cleanup of error reporting and a few added comments.
 PR: n/a
 Obtained from: n/a
 Submitted by: morten@xml.apache.org
 Reviewed by: morten@xml.apache.org</Log>
</Commit>
<Commit category="core">
<Who>sboag@apache.org</Who>
<DateCommitted>07/13/2001</DateCommitted>
<Modified>java/src/org/apache/xalan/transformer
 TransformerHandlerImpl.java</Modified>
<Log>Add pauseForTransformThreadStartup. Call this in startDocument just
 after starting the transform thread. This should get rid of any variability
 with racing threads.</Log>
</Commit>
<Commit category="core">
<Who>sboag@apache.org</Who>
<DateCommitted>07/13/2001</DateCommitted>
<Modified>java/src/org/apache/xalan/extensions
 XSLProcessorContext.java</Modified>
<Log>Fix problem reported by jason heddings &lt;Jason.Heddings@Sun.COM&gt;.

 "In v2.0.1, I was able to pass a Node to this function and have the node
 be copied to the result tree (as expected). In the source code for
 XSLProcessorContext, it appears that the only objects that can be sent
 to the result tree are XObjects. Everything else is converted to a
 String. So for instance, I can no longer create a ProcessingInstruction
 and pass it to the result tree via this method since the PI is simply
 converted to a String."</Log>
</Commit>
<Commit category="core">
<Who>sboag@apache.org</Who>
<DateCommitted>07/13/2001</DateCommitted>
<Modified>java/src/org/apache/xalan/serialize SerializerToHTML.java</Modified>
<Log>Application of patch submitted by Benjamin Riefenstahl 
&lt;Benjamin.Riefenstahl@ision.net&gt;

 Motivation: We are using Xalan to generate HTML pages. We have the
 requirement to integrate code for ad banners. The ad server provider
 has written the code to use with compatibility to NetScape 4 in mind.
 The code uses the NetScape proprietory &lt;LAYER&gt; element and &lt;IFRAME&gt;
 elements for other browsers. The SRC attributes of these elements
 contain URLs with several URL parameters separated by '&amp;', as is the
 common convention.

 Problem: The code is integrated in our XSL stylesheets. In the
 stylesheet the '&amp;' has to be written as the entity '&amp;amp;'. That's
 ok. The problem is that in the output the '&amp;' is also written as
 '&amp;amp;' which is not ok, because NetScape doesn't understand that.
 OTOH the same URL is written with '&amp;' when used in an &lt;A&gt; element.

 Solution: This goes down to a different handling of attribute values
 in the class SerializeToHTML, depending on whether the attribute in
 question is known to contain a URI or not. Xalan knows this for &lt;A&gt;
 but not for &lt;LAYER&gt; and &lt;IFRAME&gt;. When I compare the list in
 SerializeToHTML.java with the HTML specs, I find a couple of other
 missing URI attributes in SerializeToHTML.java. When I add the
 missing pieces, the generation works fine.

 Patch: Here is the patch (diff -c) for xalan-j_2_2_D6. I also have
 one for xalan-j_2_0_1 which is the version I actually tested this
 with. Please let me know if this is insufficient or the patch is
 wrong or if there is something else I can do to fix this problem.</Log>
</Commit>
<Commit category="core">
<Who>sboag@apache.org</Who>
<DateCommitted>07/13/2001</DateCommitted>
<Modified>java/src/org/apache/xml/dtm/ref/dom2dtm DOM2DTM.java</Modified>
<Log>On code review of previous checkin from Gary P., we determined there
 was a problem with the point at which type was declared a
 DTM.NAMESPACE_NODE. So that part was moved back up (actuall
 a bit higher than where it was before),
 and the call to declareNamespaceInContext was moved a bit
 further down.</Log>
</Commit>
<Commit category="core">
<Who>johng@apache.org</Who>
<DateCommitted>07/15/2001</DateCommitted>
<Modified>java/src/org/apache/xalan/lib/sql XConnection.java</Modified>
<Log>Project Update
 Submitted by: John Gentilin mailto://johng@apache.org</Log>
</Commit>
<Commit category="core">
<Who>johng@apache.org</Who>
<DateCommitted>07/15/2001</DateCommitted>
<Modified>java/src/org/apache/xalan/lib/sql SQLDocument.java</Modified>
<Log>Project Update
 Submitted by: John gentilin mailto://johng@apache.org</Log>
</Commit>
<Commit category="core">
<Who>johng@apache.org</Who>
<DateCommitted>07/15/2001</DateCommitted>
<Modified>java/src/org/apache/xalan/lib/sql SQLDocument.java</Modified>
<Log>Fixup from previous check-in, defined new
 functions.
 Submitted by: John Gentilin mailto://johng@apache.org</Log>
</Commit>
<Commit category="core">
<Who>johng@apache.org</Who>
<DateCommitted>07/15/2001</DateCommitted>
<Modified>java/src/org/apache/xalan/lib/sql SQLDocument.java</Modified>
<Log>Project Update</Log>
</Commit>
<Commit category="core">
<Who>johng@apache.org</Who>
<DateCommitted>07/15/2001</DateCommitted>
<Modified>java/src/org/apache/xalan/lib/sql SQLDocument.java</Modified>
<Log>reduced Attribute's for testing</Log>
</Commit>
<Commit category="xsltc">
<Who>morten@apache.org</Who>
<DateCommitted>07/16/2001</DateCommitted>
<Modified>java/src/org/apache/xalan/xsltc/dom DocumentCache.java</Modified>
<Added>java/src/org/apache/xalan/xsltc/trax OutputSettings.java</Added>
<Log>Reduced the refresh rate of the DocumentCache to 1 second.
 PR: n/a
 Obtained from: n/a
 Submitted by: morten@xml.apache.org
 Reviewed by: morten@xml.apache.org</Log>
</Commit>
<Commit category="core">
<Who>sboag@apache.org</Who>
<DateCommitted>07/16/2001</DateCommitted>
<Modified>java/src/org/apache/xml/dtm/ref/sax2dtm SAX2DTM.java</Modified>
<Log>Minor hack to catch an attribute value being null.</Log>
</Commit>
<Commit category="xsltc">
<Who>amiro@apache.org</Who>
<DateCommitted>07/17/2001</DateCommitted>
<Modified>java/src/org/apache/xalan/xsltc/dom DocumentCache.java</Modified>
<Log>Submitted by: Tom Amiro
 Fixes bug 1591. Changed the lastModified() method to return
 the correct timestamp for local files beginnig with the "file:"
 protocol. Incorporated Brian Ewin's suggestion to use URLdecode.
 Todd Miller and Morten Jorgensen</Log>
</Commit>
<Commit category="xsltc">
<Who>morten@apache.org</Who>
<DateCommitted>07/17/2001</DateCommitted>
<Modified>java/src/org/apache/xalan/xsltc/dom DOMImpl.java
 java/src/org/apache/xalan/xsltc/trax TemplatesImpl.java
 TransformerFactoryImpl.java TransformerImpl.java</Modified>
<Log>Added some javadoc comments to our trax stuff. Added preliminary support
 for getting/setting output properties, and for getting/setting URL resolvers.
 PR: n/a
 Obtained from: n/a
 Submitted by: morten@xml.apache.org
 Reviewed by: morten@xml.apache.org</Log>
</Commit>
<Commit category="core">
<Who>mmidy@apache.org</Who>
<DateCommitted>07/17/2001</DateCommitted>
<Modified>java/src/org/apache/xalan/templates ElemNumber.java
 java/src/org/apache/xalan/transformer Counter.java
 CountersTable.java KeyRefIterator.java
 java/src/org/apache/xml/dtm/ref/dom2dtm DOM2DTM.java
 java/src/org/apache/xpath NodeSetDTM.java
 java/src/org/apache/xpath/axes LocPathIterator.java
 UnionPathIterator.java WalkingIteratorSorted.java
 java/src/org/apache/xpath/objects XNodeSet.java
 XRTreeFrag.java</Modified>
<Log>Add new parameter to NodeSetDTM constructor. We need to have a DTMManager on 
hand. Change code to use the new constructors.</Log>
</Commit>
<Commit category="core">
<Who>mmidy@apache.org</Who>
<DateCommitted>07/17/2001</DateCommitted>
<Modified>java/src/org/apache/xml/dtm/ref/dom2dtm DOM2DTM.java</Modified>
<Log>OOps! Back out this last change. Old code on my machine!!!</Log>
</Commit>
<Commit category="core">
<Who>johng@apache.org</Who>
<DateCommitted>07/17/2001</DateCommitted>
<Modified>java/src/org/apache/xalan/lib/sql SQLDocument.java</Modified>
<Log>Fixed a few bugs, almost there
 Submitted by: John Gentilin mailto://johng@apache.org</Log>
</Commit>
<Commit category="core">
<Who>jkesselm@apache.org</Who>
<DateCommitted>07/18/2001</DateCommitted>
<Modified>java/src/org/apache/xml/dtm/ref CoroutineManager.java
 CoroutineSAXParser.java
 CoroutineSAXParser_Xerces.java</Modified>
<Added>java/src/org/apache/xml/dtm/ref IncrementalSAXSource.java
 IncrementalSAXSource_Filter.java
 IncrementalSAXSource_Xerces.java</Added>
<Log>Starting to phase out Coroutine*Parser* in favor of IncrementalSAXSource*.
 The latter simplifies the code, and should help us avoid some of the
 confusion that can arise in using the older tools.

 Most importantly, it greatly simplifies the calling sequences, by discarding
 the "which file do you want to parse" and "do you want to parse any more
 files" transactions. These now operate _only_ as filters, and only as single
 -use (though in fact the Xerces-specific version is reusable, and we may
 reintroduce that feature in the generic filtering version at a later date).

 Note too that we have swept the CoroutineManager completely
 under the covers of the filter's API. There's no particular reason to expose
 that implementation detal to the outside world.

 Still to be done: Rework the rest of Xalan to use the new code.</Log>
</Commit>
<Commit category="core">
<Who>jkesselm@apache.org</Who>
<DateCommitted>07/18/2001</DateCommitted>
<Modified>java/src/org/apache/xml/dtm/ref CoroutineParser.java</Modified>
<Log>Starting to phase out Coroutine*Parser* in favor of IncrementalSAXSource*.
 See comment in previous check-in; I just missed this one....</Log>
</Commit>
<Commit category="core">
<Who>jkesselm@apache.org</Who>
<DateCommitted>07/18/2001</DateCommitted>
<Modified>java/src/org/apache/xml/dtm/ref DTMStringPool.java</Modified>
<Log>doc.</Log>
</Commit>
<Commit category="core">
<Who>dleslie@apache.org</Who>
<DateCommitted>07/18/2001</DateCommitted>
<Modified>java/src/org/apache/xalan/res XSLTInfo.properties</Modified>
<Log>2.2.D7</Log>
</Commit>
<Commit category="core">
<Who>dleslie@apache.org</Who>
<DateCommitted>07/18/2001</DateCommitted>
<Modified>java/src/org/apache/xalan/processor XSLProcessorVersion.java</Modified>
<Log>2.2.D7</Log>
</Commit>
<Commit category="xsltc">
<Who>morten@apache.org</Who>
<DateCommitted>07/18/2001</DateCommitted>
<Modified>java/src/org/apache/xalan/xsltc TransletOutputHandler.java
 java/src/org/apache/xalan/xsltc/cmdline Transform.java
 java/src/org/apache/xalan/xsltc/compiler Output.java
 Stylesheet.java
 java/src/org/apache/xalan/xsltc/runtime
 AbstractTranslet.java DefaultRun.java
 DefaultSAXOutputHandler.java SAXAdapter.java
 StringValueHandler.java TextOutput.java
 TransletOutputBase.java</Modified>
<Log>A series of changes to the XSLTC output handling to accomodate the
 set/getOutputSettings() methods in the TrAX API.
 PR: n/a
 Obtained from: n/a
 Submitted by: morten@xml.apache.org
 Reviewed by: morten@xml.apache.org</Log>
</Commit>
<Commit category="core">
<Who>jkesselm@apache.org</Who>
<DateCommitted>07/18/2001</DateCommitted>
<Removed>java/src/org/apache/xml/dtm/ref DTMBuilder.java</Removed>
<Log>Obsolete</Log>
</Commit>
<Commit category="xsltc">
<Who>morten@apache.org</Who>
<DateCommitted>07/19/2001</DateCommitted>
<Modified>java/src/org/apache/xalan/xsltc/runtime TextOutput.java</Modified>
<Log>Fixed the handling of the 'cdata-section-elements' attribute of the
 &lt;xsl:output&gt; element. Previously we output the whole element, including
 all contents, child elements and the start- and end-tags in one big
 CDATA section. We now correctly output only immediate text child-nodes
 as CDATA sections.
 PR: n/a
 Obtained from: n/a
 Submitted by: morten@xml.apache.org
 Reviewed by: morten@xml.apache.org</Log>
</Commit>
<Commit category="xsltc">
<Who>morten@apache.org</Who>
<DateCommitted>07/19/2001</DateCommitted>
<Modified>java/src/org/apache/xalan/xsltc Translet.java
 java/src/org/apache/xalan/xsltc/dom LoadDocument.java
 java/src/org/apache/xalan/xsltc/runtime
 AbstractTranslet.java
 java/src/org/apache/xalan/xsltc/trax TransformerImpl.java</Modified>
<Log>Added implementation of get/setOutputProperties() of the Transformer
 implementation.
 PR: n/a
 Obtained from: n/a
 Submitted by: morten@xml.apache.org
 Reviewed by: morten@xml.apache.org</Log>
</Commit>
<Commit category="xsltc">
<Who>morten@apache.org</Who>
<DateCommitted>07/19/2001</DateCommitted>
<Modified>java/src/org/apache/xalan/xsltc/dom DocumentCache.java</Modified>
<Log>Added (a rather brutal) handling of all Exceptions thrown in the
 DocumentCache.getLastModified() method. This class is provided only
 as an example/skeleton, but should still - for various reasons -
 be provided in the base 'xsltc.dom' package.
 PR: n/a
 Obtained from: n/a
 Submitted by: morten@xml.apache.org
 Reviewed by: morten@xml.apache.org</Log>
</Commit>
</Commits>
