<?xml version="1.0"?>

<todo title="Things To Do" project="XSLTC" major-version="1">

  <devs>
   <person name="Jacek Ambroziak" email="jacek_ambroziak@yahoo.com" id="JA" expertise="code">
     Inventor, architect, former lead developer and evangelist.
   </person>  
   <person name="Tom Amiro" email="Tom.Amiro@Sun.COM" id="TA" expertise="testing">
     Testing.
   </person>  
   <person name="Morten J&#216;rgensen" email="morten@xml.apache.org" id="MJ" expertise="code, doc">
     Lead developer - key contributor on design documentation, ID/Keys, performance, JAXP, and continuing development in general.
   </person>
   <person name="G. Todd Miller" email="Glenn.Miller@Sun.COM" id="TM" expertise="code">
     Developer - key contributor on TrAX.
   </person>
   <person name="Santiago Pericas-Geertsen" email="santiago@cs.bu.edu" id="SP" expertise="code">
     Developer - key contributor on compilation strategy.
   </person>
  </devs>
 
  <actions>

   <target-release-description>
    <date>09/??/01</date>
    <level>????</level>
    <goal type="conformance">XSLT 1.0 compliant 100%.</goal>
    <goal type="performance">Maintain current level.</goal>
    <goal type="stability"> Stable, reasonable.</goal>
    <goal type="api">API Complete.</goal>
    <goal type="documentation">Documentation functionally complete.</goal>
   </target-release-description>
   
  <action context="test, packages:org.apache.xalan.xsltc"
          category="tests"
          who="TA, Shane"
          priority="high">
     Modify Xalan test enviroment to test XSLTC as a component of XalanJ2.
   </action>       

  <action context="code, packages:org.apache.xalan.xsltc"
          category="feature"
          who="MJ"
          priority="high">
       Finish the implementation of id() and key() in patterns.   
   </action>       

  <action context="code, packages:org.apache.xalan.xsltc"
          category="bug"
          who="??"
          priority="high">
      Continue to improve the handling of name spaces. There are a number of
      bugs that are independent of the lack of namespace nodes.  
     (bugzilla 1411, 1506, 1518, 2582, 2801, 2857, 2859, 2863, 2535, 2954, 2840)    
   </action>       

  <action context="code, packages:org.apache.xalan.xsltc"
          category="bug"
          who="??"
          priority="high">
    Fix bugs that impact the XSLTMark performance benchmark.
    (bugzilla 1376, 1498, 1512, 1532, 2351, 2517, 2553, 3065, 3066).          
   </action>
        

  <action context="code, packages:org.apache.xalan.xsltc"
          category="bugs"
          who="TM"
          priority="high">
       Fix bugs reflecting positional problems (1410, 1532, 2939).          
   </action>

  <action context="code, packages:org.apache.xalan.xsltc"
          category="bug"
          who="TM"
          priority="high">
      Fix bugs on dealing with XPATH/Axes expressions (1498, 2551, 2553, 2572, 2932).          
   </action>       

  <action context="code, packages:org.apache.xalan.xsltc"
          category="bug"
          who="??"
          priority="medium">
      Fix bugs involving template selection (1397, 2749, 2582, 2585, 2695, 2749, 2754, 2886, 2937).
   </action>

  <action context="code, packages:org.apache.xalan.xsltc"
          category="bug"
          who="??"
          priority="medium">
      Fix bugs affecting numbering (2901, 2931).
   </action>

  <action context="code, packages:org.apache.xalan.xsltc"
          category="bug"
          who="??"
          priority="medium">
      Fix bugs affecting comment and processing-intruction nodes (2599, 2834, 2858).
   </action>

  <action context="code, packages:org.apache.xalan.xsltc"
          category="feature"
          who="MJ"
          priority="low">
     Implement name space nodes (bugzilla 1379).
   </action>       

  <action context="code, packages:????"
          category="feature, integration with Xalan"
          who="??"
          priority="medium">
      Implement an extension to support the redirection of output to multiple
      output files from within a stylesheet (equivalent to xalan:redirect or
      saxon:output).  Note: Task may be implemented as a result of integrating Xsltc and Xalan 
     and using shared code.
   </action>       


  <action context="code, packages:????"
          category="feature, integration with Xalan"
          who="??"
          priority="medium">
     Implement a node-set extension to convert result tree fragments to
     node-sets. This enables sorting and grouping of nodes assigned to a tree 
     variable. Note: Task may be implemented as a result of integrating Xsltc and Xalan 
     and using shared code.
   </action>       


  <action context="code, packages:????"
          category="feature, integration with Xalan"
          who="??"
          priority="medium">
      Add support for nonstatic external Java functions.  
      Note: Task may be implemented as a result of integrating Xsltc and Xalan 
      and using shared code.
   </action>       


  <action context="code, packages:????"
          category="feature, integration with Xalan"
          who="??"
          priority="medium">
    Fix bugs affecting the correctness of ouput 
    (1439, 1504, 1512, 1516, 1520, 1525, 2517, 2520, 2578, 2948, 2951, 2952, 2954, 3005, 3065).
     Note: Task may be implemented as a result of integrating Xsltc and Xalan 
     and using shared code.
   </action>       

  <action context="code, AST"
          category="architecture"
          who="??"
          priority="medium">
    Use SAX to build the AST. The DOM builder
   (the real DOM builder, not our quasi-DOM builder) receives SAX
   events when it builds the DOM. The compiler.Parser class could
   possible receive these SAX events directly, and thereby eliminating
   the need for a DOM (saves loads of time and memory).
   </action>
   
   <action context="code, DOM"
           category="architecture"
           who="??"
           priority="medium">
      Consider building a DOM-2-'DOM' converter, perhaps by adding 
      a second DOM builder inner class to our DOM. Then we would have 
      one SAX DOM builder and one DOM DOM builder. I don't know if
      JAXP lets you supply the stylesheet as a DOM. If it doesn't, 
      we should assign this task a very low priority. There is no
      point in spending a lot of time on this if JAXP users will 
      never be able to use this functionality.
    </action>       

  </actions>
</todo>
