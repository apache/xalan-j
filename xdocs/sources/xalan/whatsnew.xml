<?xml version="1.0" standalone="no"?>
<!DOCTYPE s1 SYSTEM "sbk:/style/dtd/document.dtd">
<!--
 * The Apache Software License, Version 1.1
 *
 *
 * Copyright (c) 1999 The Apache Software Foundation.  All rights 
 * reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer. 
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 *
 * 3. The end-user documentation included with the redistribution,
 *    if any, must include the following acknowledgment:  
 *       "This product includes software developed by the
 *        Apache Software Foundation (http://www.apache.org/)."
 *    Alternately, this acknowledgment may appear in the software itself,
 *    if and wherever such third-party acknowledgments normally appear.
 *
 * 4. The names "Xalan" and "Apache Software Foundation" must
 *    not be used to endorse or promote products derived from this
 *    software without prior written permission. For written 
 *    permission, please contact apache@apache.org.
 *
 * 5. Products derived from this software may not be called "Apache",
 *    nor may "Apache" appear in their name, without prior written
 *    permission of the Apache Software Foundation.
 *
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR
 * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
 * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 * ====================================================================
 *
 * This software consists of voluntary contributions made by many
 * individuals on behalf of the Apache Software Foundation and was
 * originally based on software copyright (c) 1999, Lotus
 * Development Corporation., http://www.lotus.com.  For more
 * information on the Apache Software Foundation, please see
 * <http://www.apache.org/>.
 -->
<s1 title="What's new in &xslt4j2;">
<ul>
  <li><link anchor="design">New Design</link></li>
  <li><link anchor="packages">Package layout</link></li>
</ul><anchor name="design"/>
  <s2 title="New Design">
  <p>&xslt4j2; represents a fundamental redesign of Xalan. The goal of this redesign is an easier-to-use, more understandable, and more modular API that that lends itself to "streaming," the production of transformation output while the input is still being parsed, and that encourages wider participation in its ongoing development by the open-source XML developer community.</p>
<p>As a result of this redesign, the changes are global in nature. The API and the basic usage patterns are different. For the details, see <link idref="usagepatterns">Basic Usage Patterns</link>.</p>
<p>To start with, &xslt4j2; implements the <resource-ref idref="trax"/> interfaces. A number of open-source XML tool developers have collaborated on TRaX, a conceptual framework and a standard API for performing a variety of XML transformations. We strongly encourage you to use the TRaX framework and interfaces when you perform XML transformations.</p>
<p>The basic organization of TRaX is quite simple: use a Processor to process transformation instructions (the stylesheet), producing a Templates object. Use the Templates object to instantiate a Transformer, with which you can apply the Templates object to XML input, producing a result tree. For more detail, see <link idref="usagepatterns" anchor="basic">Basic steps</link>.</p>
    <p>&xslt4j2; builds on <resource-ref idref="sax2"/>, <resource-ref idref="dom2"/>, and the <resource-ref idref="jaxp"/>. For example, &xslt4j2; incorporates the SAX parsing event model in its support for the incremental production of transformation output.</p>
    <p>In conjunction with TRaX, &xslt4j; gathers basic operational settings from system properties. System properties, for example, identify the stylesheet processor and SAX parser to use, and the serializers that are available for various output methods. The default settings point to the Xalan StylesheetProcessor, the Xerces SAXParser, and the serializers shipped with Xerces.</p>
</s2><anchor name="packages"/>
  <s2 title="Package layout">
  <p>The class package structure maps closely to major conceptual modules. For example, you use the processor
  package to process stylesheets and produce stylesheet templates (the templates package). Then you use the
  transformer package to apply the templates to a source tree and produce an output tree. Responsibility for
  evaluating XPath expressions and XSLT matching patterns is centralized in the XPath packages, and a variety of
  utilities used by multiple packages are in the utils package.</p>
  <p>&xslt4j2; is made up of four major and several minor modules. The four major modules are:</p>
<gloss> 
		<label><jump href="apidocs/org/apache/xalan/processor/package-summary.html">org.apache.xalan.processor</jump></label> 
		<item>Processes the stylesheet and produces the Templates object. This module is responsible for
    implementing the <jump href="apidocs/trax/Processor.html">trax.Processor</jump> abstract class, which 
    provides the primary entry point into &xslt4j;.</item> 
	 </gloss> 
	 <gloss> 
		<label><jump href="apidocs/org/apache/xalan/templates/package-summary.html">org.apache.xalan.templates</jump></label> 
		<item>Defines the structure and content of a stylesheet tree (which may include multiple imported and
    included stylesheets). This module is responsible for implementing the <jump
    href="apidocs/trax/Templates.html">trax.Templates</jump> interface.</item> 
	 </gloss> 
	 <gloss> 
		<label><jump href="apidocs/org/apache/xalan/transformer/package-summary.html">org.apache.xalan.transformer</jump></label> 
		<item>Applies the Templates object to the XML source and produces the result tree. This module is
     responsible for implementing the <jump href="apidocs/trax/Transformer.html">trax.Transformer</jump>
     interface.</item> 
	 </gloss> 
	 <gloss> 
		<label><jump href="apidocs/org/apache/xpath/package-summary.html">org.apache.xpath</jump></label> 
		<item>Evaluates XPath expressions and XSLT match patterns.</item> 
	 </gloss>
  <p>Other modules include:</p>
  <gloss>
		<label><jump href="apidocs/org/apache/xalan/stree/package-summary.html">org.apache.xalan.stree</jump></label>
      <item>Implementation of DOM source tree optimized for node retrieval and XSLT processing.</item>
	 </gloss>
     <gloss>
		<label><jump href="apidocs/org/apache/xalan/utils/package-summary.html">org.apache.xalan.utils</jump></label>
      <item>Xalan utilities used by the other packages.</item>
	 </gloss>
   <gloss> 
		<label><jump href="apidocs/org/apache/xalan/res/package-summary.html">org.apache.xalan.res</jump></label>
      <item>&xslt4j; resource files (such as error message).</item>
	 </gloss> 
   <gloss> 
		<label><jump href="apidocs/org/apache/xalan/client/package-summary.html">org.apache.xalan.client</jump></label>
      <item>Provides an applet interface for performing XSLT transformations.</item>
	 </gloss> 
   <gloss> 
		<label><jump href="apidocs/org/apache/xalan/trace/package-summary.html">org.apache.xalan.trace</jump></label>
     <item>Enables XSLT debuggers and similar tools to add trace listeners to transformation operations.</item>
	 </gloss>    
  <gloss> 
		<label><jump href="apidocs/org/apache/xalan/extensions/package-summary.html">org.apache.xalan.extensions</jump></label>
      <item>Support for extension elements and extension functions, which allow you to call Java code and scripts from within a stylesheet.</item>
	 </gloss> 
   <gloss> 
		<label><jump href="apidocs/org/apache/xalan/lib/package-summary.html">org.apache.xalan.lib</jump></label>
      <item>The &xslt4j; extensions library. To date this library includes a Redirect extension, which allows a stylesheet to produce multiple output files, and a preliminary version of an SQL extension with which you can connect to and submit queries to a JDBC data source, and incrementally "stream" the result set into an XML target.</item>
	 </gloss> 
   <gloss> 
		<label><jump href="apidocs/org/apache/xalan/xslt/package-summary.html">org.apache.xalan.xslt</jump> and <jump href="apidocs/org/apache/xalan/xpath/package-summary.html">org.apache.xalan.xpath</jump></label>
      <item>Provide &xslt4j; 1 applications an interface to &xslt4j2;</item>
    </gloss>  
</s2>
</s1>
