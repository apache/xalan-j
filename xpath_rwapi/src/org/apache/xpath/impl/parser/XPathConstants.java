/* Generated By:JJTree&JavaCC: Do not edit this line. XPathConstants.java */
package org.apache.xpath.impl.parser;

public interface XPathConstants {

  int EOF = 0;
  int ExprComment = 1;
  int ExprCommentStart = 2;
  int ExprCommentContent = 3;
  int ExprCommentEnd = 4;
  int IntegerLiteral = 5;
  int DecimalLiteral = 6;
  int DoubleLiteral = 7;
  int StringLiteral = 8;
  int StringLiteralForKindTest = 9;
  int skip_ = 11;
  int NotOccurrenceIndicator = 12;
  int AxisChild = 13;
  int AxisDescendant = 14;
  int AxisParent = 15;
  int AxisAttribute = 16;
  int AxisSelf = 17;
  int AxisDescendantOrSelf = 18;
  int AxisAncestor = 19;
  int AxisFollowingSibling = 20;
  int AxisPrecedingSibling = 21;
  int AxisFollowing = 22;
  int AxisPreceding = 23;
  int AxisNamespace = 24;
  int AxisAncestorOrSelf = 25;
  int Or = 26;
  int And = 27;
  int Div = 28;
  int Idiv = 29;
  int Mod = 30;
  int Multiply = 31;
  int In = 32;
  int Nillable = 33;
  int SchemaGlobalContextSlash = 34;
  int SchemaGlobalTypeName = 35;
  int SchemaGlobalContext = 36;
  int SchemaContextStepSlash = 37;
  int SchemaContextStep = 38;
  int Satisfies = 39;
  int Return = 40;
  int Then = 41;
  int Else = 42;
  int To = 43;
  int Intersect = 44;
  int Union = 45;
  int Except = 46;
  int Instanceof = 47;
  int Castable = 48;
  int Item = 49;
  int ElementType = 50;
  int AttributeType = 51;
  int Empty = 52;
  int Nmstart = 53;
  int Nmchar = 54;
  int Star = 55;
  int AnyName = 56;
  int NCNameColonStar = 57;
  int StarColonNCName = 58;
  int Root = 59;
  int RootDescendants = 60;
  int Slash = 61;
  int SlashSlash = 62;
  int Equals = 63;
  int Is = 64;
  int NotEquals = 65;
  int IsNot = 66;
  int LtEquals = 67;
  int LtLt = 68;
  int GtEquals = 69;
  int GtGt = 70;
  int FortranEq = 71;
  int FortranNe = 72;
  int FortranGt = 73;
  int FortranGe = 74;
  int FortranLt = 75;
  int FortranLe = 76;
  int Lt = 77;
  int Gt = 78;
  int Minus = 79;
  int Plus = 80;
  int UnaryMinus = 81;
  int UnaryPlus = 82;
  int OccurrenceZeroOrOne = 83;
  int OccurrenceZeroOrMore = 84;
  int OccurrenceOneOrMore = 85;
  int Vbar = 86;
  int Lpar = 87;
  int At = 88;
  int Lbrack = 89;
  int Rbrack = 90;
  int Rpar = 91;
  int RparForKindTest = 92;
  int Some = 93;
  int Every = 94;
  int ForVariable = 95;
  int CastAs = 96;
  int TreatAs = 97;
  int Digits = 98;
  int DocumentLpar = 99;
  int DocumentLparForKindTest = 100;
  int NodeLpar = 101;
  int CommentLpar = 102;
  int TextLpar = 103;
  int ProcessingInstructionLpar = 104;
  int ElementTypeForKindTest = 105;
  int ElementTypeForDocumentTest = 106;
  int AttributeTypeForKindTest = 107;
  int ProcessingInstructionLparForKindTest = 108;
  int TextLparForKindTest = 109;
  int CommentLparForKindTest = 110;
  int NodeLparForKindTest = 111;
  int IfLpar = 112;
  int Comma = 113;
  int CommaForKindTest = 114;
  int Dot = 115;
  int DotDot = 116;
  int NCName = 117;
  int Prefix = 118;
  int LocalPart = 119;
  int VariableIndicator = 120;
  int VarName = 121;
  int QNameForSequenceType = 122;
  int QNameForItemType = 123;
  int QName = 124;
  int IDLpar = 125;
  int KeyLpar = 126;
  int QNameLpar = 127;
  int NCNameForPI = 128;
  int Char = 129;
  int WhitespaceChar = 130;
  int Letter = 131;
  int BaseChar = 132;
  int Ideographic = 133;
  int CombiningChar = 134;
  int Digit = 135;
  int Extender = 136;

  int DEFAULT = 0;
  int OPERATOR = 1;
  int ITEMTYPE = 2;
  int VARNAME = 3;
  int EXPR_COMMENT = 4;
  int KINDTEST = 5;
  int KINDTESTFORPI = 6;
  int QNAME = 7;
  int NAMESPACEDECL = 8;
  int XMLSPACE_DECL = 9;
  int NAMESPACEKEYWORD = 10;
  int OCCURRENCEINDICATOR = 11;
  int CLOSEKINDTEST = 12;
  int SCHEMACONTEXTSTEP = 13;
  int EXT_KEY = 14;
  int DUMMY = 15;

  String[] tokenImage = {
    "<EOF>",
    "<ExprComment>",
    "\"(:\"",
    "<ExprCommentContent>",
    "\":)\"",
    "<IntegerLiteral>",
    "<DecimalLiteral>",
    "<DoubleLiteral>",
    "<StringLiteral>",
    "<StringLiteralForKindTest>",
    "<token of kind 10>",
    "<skip_>",
    "<NotOccurrenceIndicator>",
    "<AxisChild>",
    "<AxisDescendant>",
    "<AxisParent>",
    "<AxisAttribute>",
    "<AxisSelf>",
    "<AxisDescendantOrSelf>",
    "<AxisAncestor>",
    "<AxisFollowingSibling>",
    "<AxisPrecedingSibling>",
    "<AxisFollowing>",
    "<AxisPreceding>",
    "<AxisNamespace>",
    "<AxisAncestorOrSelf>",
    "\"or\"",
    "\"and\"",
    "\"div\"",
    "\"idiv\"",
    "\"mod\"",
    "\"*\"",
    "\"in\"",
    "\"nillable\"",
    "<SchemaGlobalContextSlash>",
    "<SchemaGlobalTypeName>",
    "<SchemaGlobalContext>",
    "<SchemaContextStepSlash>",
    "<SchemaContextStep>",
    "\"satisfies\"",
    "\"return\"",
    "\"then\"",
    "\"else\"",
    "\"to\"",
    "\"intersect\"",
    "\"union\"",
    "\"except\"",
    "<Instanceof>",
    "<Castable>",
    "<Item>",
    "<ElementType>",
    "<AttributeType>",
    "<Empty>",
    "<Nmstart>",
    "<Nmchar>",
    "\"*\"",
    "\"*\"",
    "<NCNameColonStar>",
    "<StarColonNCName>",
    "\"/\"",
    "\"//\"",
    "\"/\"",
    "\"//\"",
    "\"=\"",
    "\"is\"",
    "\"!=\"",
    "\"isnot\"",
    "\"<=\"",
    "\"<<\"",
    "\">=\"",
    "\">>\"",
    "\"eq\"",
    "\"ne\"",
    "\"gt\"",
    "\"ge\"",
    "\"lt\"",
    "\"le\"",
    "\"<\"",
    "\">\"",
    "\"-\"",
    "\"+\"",
    "\"-\"",
    "\"+\"",
    "\"?\"",
    "\"*\"",
    "\"+\"",
    "\"|\"",
    "\"(\"",
    "\"@\"",
    "\"[\"",
    "\"]\"",
    "\")\"",
    "\")\"",
    "<Some>",
    "<Every>",
    "<ForVariable>",
    "<CastAs>",
    "<TreatAs>",
    "<Digits>",
    "<DocumentLpar>",
    "<DocumentLparForKindTest>",
    "<NodeLpar>",
    "<CommentLpar>",
    "<TextLpar>",
    "<ProcessingInstructionLpar>",
    "<ElementTypeForKindTest>",
    "<ElementTypeForDocumentTest>",
    "<AttributeTypeForKindTest>",
    "<ProcessingInstructionLparForKindTest>",
    "<TextLparForKindTest>",
    "<CommentLparForKindTest>",
    "<NodeLparForKindTest>",
    "<IfLpar>",
    "\",\"",
    "\",\"",
    "\".\"",
    "\"..\"",
    "<NCName>",
    "<Prefix>",
    "<LocalPart>",
    "\"$\"",
    "<VarName>",
    "<QNameForSequenceType>",
    "<QNameForItemType>",
    "<QName>",
    "<IDLpar>",
    "<KeyLpar>",
    "<QNameLpar>",
    "<NCNameForPI>",
    "<Char>",
    "<WhitespaceChar>",
    "<Letter>",
    "<BaseChar>",
    "<Ideographic>",
    "<CombiningChar>",
    "<Digit>",
    "<Extender>",
  };

}
